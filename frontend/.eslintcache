[{"C:\\Users\\nsnkr\\PROJECT_FOS\\frontend\\src\\index.js":"1","C:\\Users\\nsnkr\\PROJECT_FOS\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\nsnkr\\PROJECT_FOS\\frontend\\src\\App.js":"3","C:\\Users\\nsnkr\\PROJECT_FOS\\frontend\\src\\components\\NavBar.js":"4","C:\\Users\\nsnkr\\PROJECT_FOS\\frontend\\src\\components\\MoviesList.js":"5","C:\\Users\\nsnkr\\PROJECT_FOS\\frontend\\src\\components\\Search.js":"6","C:\\Users\\nsnkr\\PROJECT_FOS\\frontend\\src\\components\\AboutUs.js":"7","C:\\Users\\nsnkr\\PROJECT_FOS\\frontend\\src\\components\\SignUp.js":"8","C:\\Users\\nsnkr\\PROJECT_FOS\\frontend\\src\\components\\Login.js":"9","C:\\Users\\nsnkr\\PROJECT_FOS\\frontend\\src\\components\\Profile.js":"10","C:\\Users\\nsnkr\\PROJECT_FOS\\frontend\\src\\components\\Account.js":"11","C:\\Users\\nsnkr\\PROJECT_FOS\\frontend\\src\\components\\ForgotPassword.js":"12","C:\\Users\\nsnkr\\PROJECT_FOS\\frontend\\src\\components\\UpdateAccount.js":"13","C:\\Users\\nsnkr\\PROJECT_FOS\\frontend\\src\\contexts\\AuthProvider.js":"14","C:\\Users\\nsnkr\\PROJECT_FOS\\frontend\\src\\firebase.js":"15","C:\\Users\\nsnkr\\PROJECT_FOS\\frontend\\src\\components\\Center.js":"16","C:\\Users\\nsnkr\\PROJECT_FOS\\frontend\\src\\components\\MovieCard.js":"17","C:\\Users\\nsnkr\\PROJECT_FOS\\frontend\\src\\components\\TodayTV.js":"18","C:\\Users\\nsnkr\\PROJECT_FOS\\frontend\\src\\components\\TVShowCard.js":"19"},{"size":517,"mtime":1615334050206,"results":"20","hashOfConfig":"21"},{"size":375,"mtime":1615334050211,"results":"22","hashOfConfig":"21"},{"size":1733,"mtime":1616690706926,"results":"23","hashOfConfig":"21"},{"size":5077,"mtime":1616448671651,"results":"24","hashOfConfig":"21"},{"size":3159,"mtime":1616690156004,"results":"25","hashOfConfig":"21"},{"size":3076,"mtime":1616689501818,"results":"26","hashOfConfig":"21"},{"size":1564,"mtime":1615746666175,"results":"27","hashOfConfig":"21"},{"size":3519,"mtime":1616448070580,"results":"28","hashOfConfig":"21"},{"size":2993,"mtime":1616448070576,"results":"29","hashOfConfig":"21"},{"size":111,"mtime":1616448070579,"results":"30","hashOfConfig":"21"},{"size":1271,"mtime":1616448070574,"results":"31","hashOfConfig":"21"},{"size":2631,"mtime":1616448070576,"results":"32","hashOfConfig":"21"},{"size":3969,"mtime":1616448070581,"results":"33","hashOfConfig":"21"},{"size":1532,"mtime":1616448070587,"results":"34","hashOfConfig":"21"},{"size":593,"mtime":1615746666177,"results":"35","hashOfConfig":"21"},{"size":245,"mtime":1616448070575,"results":"36","hashOfConfig":"21"},{"size":8206,"mtime":1616464742862,"results":"37","hashOfConfig":"21"},{"size":2934,"mtime":1616690918370,"results":"38","hashOfConfig":"21"},{"size":10207,"mtime":1616690990760,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1e1q63x",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\nsnkr\\PROJECT_FOS\\frontend\\src\\index.js",[],["84","85"],"C:\\Users\\nsnkr\\PROJECT_FOS\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\nsnkr\\PROJECT_FOS\\frontend\\src\\App.js",[],"C:\\Users\\nsnkr\\PROJECT_FOS\\frontend\\src\\components\\NavBar.js",["86","87","88","89","90","91","92"],"import React, { useState } from 'react'\r\nimport { useAuth } from \"../contexts/AuthProvider\";\r\nimport { Dropdown } from \"react-bootstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport axios from 'axios'\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\n// import {useHistory} from \"react-router\";\r\n// eslint-disable-next-line\r\nconst apiKey = \"42d845ec0caf10ecc9f34f1648197aee\"\r\nconst imageBase = \"http://image.tmdb.org/t/p/w300\";\r\nvar result = [];\r\n\r\nconst NavBar = () => {\r\n    // const [data,getData] = useState('');\r\n    // const history = useHistory();\r\n    const onClick = (event) => {\r\n        event.preventDefault();\r\n        const val = document.getElementById('searchValue').value;\r\n        \r\n        history.push('/search',{data:val});\r\n        // var res = [];\r\n        // var data;\r\n        \r\n        \r\n    }\r\n\r\n    const {user, logOut} = useAuth();\r\n    const [error, setError] = useState('');\r\n    const history = useHistory();\r\n\r\n    const customToggle = React.forwardRef(({children, onClick}, ref) => (\r\n        <a\r\n            href=\"\"\r\n            ref={ref}\r\n            onClick={e => {\r\n                e.preventDefault();\r\n                onClick(e);\r\n            }}\r\n        >\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"25\" height=\"25\" fill=\"white\"\r\n                 className=\"bi bi-person-circle\" viewBox=\"0 0 16 16\">\r\n                <path d=\"M11 6a3 3 0 1 1-6 0 3 3 0 0 1 6 0z\"/>\r\n                <path fillRule=\"evenodd\"\r\n                      d=\"M0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8zm8-7a7 7 0 0 0-5.468 11.37C3.242 11.226 4.805 10 8 10s4.757 1.225 5.468 2.37A7 7 0 0 0 8 1z\"/>\r\n            </svg>\r\n            {children}\r\n        </a>\r\n    ));\r\n\r\n    const signOutHandler = (event) => {\r\n        setError('');\r\n        try {\r\n            logOut();\r\n            history.push('/');\r\n        } catch {\r\n            setError('Failed to sign out.');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='container'>\r\n            <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav mr-auto col-3\">\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" href=\"/\">Home</a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" href=\"/aboutuspage\">About Us</a>\r\n                        </li>\r\n                    </ul>\r\n                    <form className=\"form-inline my-2 my-lg-0 col-6\">\r\n                        <label htmlFor=\"searchValue\"></label>\r\n                    <input className=\"form-control mr-sm-2 col-8\" type=\"search\" placeholder=\"Search Movies/TV Shows\" aria-label=\"Search\" id=\"searchValue\"/>\r\n                    <button className=\"btn btn-outline-primary my-2 my-sm-0\" type=\"submit\" onClick={onClick}>Search</button>\r\n                    <ul>\r\n                        {result}\r\n                    </ul>\r\n                    </form>\r\n                    <ul className=\"navbar-nav mr-auto\">\r\n                        {user != null\r\n                            ? <>\r\n                                <li className=\"nav-item\">\r\n                                    <Dropdown>\r\n                                        <Dropdown.Toggle as={customToggle} id=\"dropdown-custom-components\">\r\n                                        </Dropdown.Toggle>\r\n\r\n                                        <Dropdown.Menu>\r\n                                            <Dropdown.Item eventKey=\"1\">\r\n                                                <Link to='/profile'>Profile</Link>\r\n                                            </Dropdown.Item>\r\n                                            <Dropdown.Item eventKey=\"2\">\r\n                                                <Link to='/account'>Account</Link>\r\n                                            </Dropdown.Item>\r\n                                            <Dropdown.Item eventKey=\"3\" onClick={signOutHandler}>\r\n                                                Sign Out\r\n                                            </Dropdown.Item>\r\n                                        </Dropdown.Menu>\r\n                                    </Dropdown>\r\n                                </li>\r\n                            </>\r\n                            : <>\r\n                                <li className=\"nav-item\">\r\n                                    <a className=\"nav-link\" href=\"/login\">Log In</a>\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <a className=\"nav-link\" href=\"/signup\">Sign Up</a>\r\n                                </li>\r\n                            </>\r\n                        }\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NavBar\r\n","C:\\Users\\nsnkr\\PROJECT_FOS\\frontend\\src\\components\\MoviesList.js",["93","94","95","96","97","98","99","100","101","102","103","104"],"C:\\Users\\nsnkr\\PROJECT_FOS\\frontend\\src\\components\\Search.js",["105","106","107"],"C:\\Users\\nsnkr\\PROJECT_FOS\\frontend\\src\\components\\AboutUs.js",[],"C:\\Users\\nsnkr\\PROJECT_FOS\\frontend\\src\\components\\SignUp.js",["108"],"import { Form, Button, Card, Alert } from 'react-bootstrap'\r\nimport { useRef, useState } from \"react\";\r\nimport { useAuth } from \"../contexts/AuthProvider\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport Center from \"./Center\";\r\n\r\nconst SignUp = () => {\r\n\r\n    const emailRef = useRef();\r\n    const passwordRef = useRef();\r\n    const passwordConfirmRef = useRef();\r\n    const {signUp, user} = useAuth();\r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const history = useHistory();\r\n\r\n\r\n    async function signUpHandler(event) {\r\n        event.preventDefault();\r\n\r\n        if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n            return setError('Passwords do not match.');\r\n        }\r\n\r\n        try {\r\n            setError('');\r\n            setLoading(true);\r\n            await signUp(\r\n                emailRef.current.value,\r\n                passwordRef.current.value\r\n            );\r\n            history.push('/');\r\n        } catch {\r\n            setError('Failed to create an account.');\r\n        }\r\n\r\n        setLoading(false);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Center>\r\n                <Card style={{minWidth: 600}}>\r\n                    <Card.Body>\r\n                        <h1 style={{textAlign: 'center'}}>Sign Up</h1>\r\n                        {error && <Alert variant='danger'>{error}</Alert>}\r\n                        <Form onSubmit={signUpHandler}>\r\n                            <Form.Group id='email'>\r\n                                <Form.Label>Email Address</Form.Label>\r\n                                <Form.Control\r\n                                    type='email'\r\n                                    placeholder='Enter email'\r\n                                    ref={emailRef}\r\n                                    required\r\n                                />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group id='password'>\r\n                                <Form.Label>Password</Form.Label>\r\n                                <Form.Control\r\n                                    type='password'\r\n                                    placeholder='Password'\r\n                                    ref={passwordRef}\r\n                                    required\r\n                                />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='formBasicPassword'>\r\n                                <Form.Label>Confirm Password</Form.Label>\r\n                                <Form.Control\r\n                                    type='password'\r\n                                    placeholder='Password'\r\n                                    ref={passwordConfirmRef}\r\n                                    required\r\n                                />\r\n                            </Form.Group>\r\n\r\n                            <Button\r\n                                disabled={loading}\r\n                                className='w-100'\r\n                                as=\"input\"\r\n                                type=\"submit\"\r\n                                value=\"Submit\"\r\n                            />\r\n                        </Form>\r\n                    </Card.Body>\r\n                </Card>\r\n            </Center>\r\n            <div className='w-100 text-center mt-2'>\r\n                Already have an account? <Link to='/login'>Log In</Link>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SignUp;","C:\\Users\\nsnkr\\PROJECT_FOS\\frontend\\src\\components\\Login.js",["109"],"import { Form, Button, Card, Alert } from 'react-bootstrap'\r\nimport { useRef, useState } from \"react\";\r\nimport { useAuth } from \"../contexts/AuthProvider\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport Center from \"./Center\";\r\n\r\nconst Login = () => {\r\n\r\n    const emailRef = useRef();\r\n    const passwordRef = useRef();\r\n    const {logIn, user} = useAuth();\r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const history = useHistory();\r\n\r\n\r\n    async function logInHandler(event) {\r\n        event.preventDefault();\r\n\r\n        try {\r\n            setError('');\r\n            setLoading(true);\r\n            await logIn(\r\n                emailRef.current.value,\r\n                passwordRef.current.value\r\n            );\r\n            history.push('/');\r\n        } catch {\r\n            setError('Failed to sign in.');\r\n        }\r\n\r\n        setLoading(false);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Center>\r\n                <Card style={{minWidth: 600}}>\r\n                    <Card.Body>\r\n                        <h1 style={{textAlign: 'center'}}>Log In</h1>\r\n                        {error && <Alert variant='danger'>{error}</Alert>}\r\n                        <Form onSubmit={logInHandler}>\r\n                            <Form.Group id='email'>\r\n                                <Form.Label>Email Address</Form.Label>\r\n                                <Form.Control\r\n                                    type='email'\r\n                                    placeholder='Enter email'\r\n                                    ref={emailRef}\r\n                                    required\r\n                                />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group id='password'>\r\n                                <Form.Label>Password</Form.Label>\r\n                                <Form.Control\r\n                                    type='password'\r\n                                    placeholder='Password'\r\n                                    ref={passwordRef}\r\n                                    required\r\n                                />\r\n                            </Form.Group>\r\n\r\n                            <Button\r\n                                disabled={loading}\r\n                                className='w-100'\r\n                                as=\"input\"\r\n                                type=\"submit\"\r\n                                value=\"Submit\"\r\n                            />\r\n                        </Form>\r\n                        <div className='w-100 text-center mt-4'>\r\n                            <Link to='/forgot-password'>Forgot Password</Link>\r\n                        </div>\r\n                    </Card.Body>\r\n                </Card>\r\n            </Center>\r\n            <div className='w-100 text-center mt-2'>\r\n                Don't have an account? <Link to='/signup'>Sign Up</Link>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Login;","C:\\Users\\nsnkr\\PROJECT_FOS\\frontend\\src\\components\\Profile.js",[],"C:\\Users\\nsnkr\\PROJECT_FOS\\frontend\\src\\components\\Account.js",["110","111","112"],"import React from 'react';\r\nimport { useAuth } from \"../contexts/AuthProvider\";\r\nimport { Alert, Button, Card, Form, ListGroup } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Account = () => {\r\n    const {user} = useAuth();\r\n\r\n    return (\r\n        <div style={{display: 'flex', justifyContent: 'center', alignContent: 'center'}}>\r\n            <Card style={{minWidth: 600}}>\r\n                <Card.Body>\r\n                    <h1 style={{textAlign: 'center'}}>Account Information</h1>\r\n\r\n                    <div style={{textAlign: 'center'}}>\r\n                        <strong>Email: </strong>\r\n                        <span>{user.email}</span>\r\n                    </div>\r\n                    <Link to='/update-account'>\r\n                        <div className=\"text-center mt-4\">\r\n                            <Button\r\n                                className='w-50 center'\r\n                                as=\"input\"\r\n                                type=\"submit\"\r\n                                value=\"Update Account Information\">\r\n                            </Button>\r\n                        </div>\r\n                    </Link>\r\n                </Card.Body>\r\n            </Card>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Account;\r\n","C:\\Users\\nsnkr\\PROJECT_FOS\\frontend\\src\\components\\ForgotPassword.js",[],"C:\\Users\\nsnkr\\PROJECT_FOS\\frontend\\src\\components\\UpdateAccount.js",[],"C:\\Users\\nsnkr\\PROJECT_FOS\\frontend\\src\\contexts\\AuthProvider.js",[],"C:\\Users\\nsnkr\\PROJECT_FOS\\frontend\\src\\firebase.js",[],"C:\\Users\\nsnkr\\PROJECT_FOS\\frontend\\src\\components\\Center.js",[],"C:\\Users\\nsnkr\\PROJECT_FOS\\frontend\\src\\components\\MovieCard.js",["113"],"import React, {Component} from \"react\";\r\nimport { Button, Card, OverlayTrigger, Popover, Container, Row, CardGroup } from \"react-bootstrap\";\r\n\r\nconst apiKey=\"42d845ec0caf10ecc9f34f1648197aee\";\r\nconst imageBase = \"http://image.tmdb.org/t/p/w185\";\r\nconst videoBase = \"https://www.youtube.com/watch?v=\";\r\nconst scrollable = {\r\n    height: '40rem',\r\n    overflow: 'auto'\r\n};\r\n\r\nclass MovieCard extends Component {\r\n\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            showID: props.id,\r\n            detailsData: {},\r\n            genres: [],\r\n            productionCompanies: [],\r\n            cast: [],\r\n            crew: [],\r\n            reviews: [],\r\n            videos: [],\r\n            providers: [],\r\n            summary: \"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.fetchDetails();\r\n        this.fetchCastAndCrew();\r\n        this.fetchReviews();\r\n        this.fetchVideos();\r\n        this.fetchProviders();\r\n    }\r\n\r\n    fetchDetails(){\r\n\r\n        const url = `https://api.themoviedb.org/3/movie/${this.state.showID}?api_key=${apiKey}&language=en-US&external_source=imdb_id`;\r\n        \r\n        fetch(url)\r\n        .then(response => response.json())\r\n        .then(data => \r\n            this.setState({\r\n                detailsData: data,\r\n                genres: data.genres.map( genreInfo => genreInfo.name ),\r\n                productionCompanies: data.production_companies.map( prodInfo => prodInfo.name ),\r\n                summary: data.overview\r\n            }));\r\n        \r\n    }\r\n\r\n    fetchCastAndCrew() {\r\n        const url = `https://api.themoviedb.org/3/movie/${this.state.showID}/credits?api_key=${apiKey}&language=en-US`;\r\n\r\n        fetch(url)\r\n        .then(response => response.json())\r\n        .then(data => this.setState({\r\n            cast: data.cast.map( eachCast => `${eachCast.name}`),\r\n            crew: data.crew.map( eachCrew => `${eachCrew.name} [${eachCrew.department}]`)\r\n        }));\r\n    }\r\n\r\n    fetchReviews() {\r\n        \r\n        const url = `https://api.themoviedb.org/3/movie/${this.state.showID}/reviews?api_key=${apiKey}`;\r\n\r\n        fetch(url)\r\n        .then(response => response.json())\r\n        .then(data => this.setState({\r\n            reviews: data.results.map( eachReviewInfo => `${eachReviewInfo.content} - ${eachReviewInfo.author}` )\r\n        }));\r\n    }\r\n\r\n    fetchVideos() {\r\n\r\n        const url = `https://api.themoviedb.org/3/movie/${this.state.showID}/videos?api_key=${apiKey}&language=en-US`;\r\n\r\n        fetch(url)\r\n        .then(response => response.json())\r\n        .then(data => this.setState({\r\n            videos: data.results.map( eachVideoInfo => [`${videoBase}${eachVideoInfo.key}`, `${eachVideoInfo.type}`] )\r\n        }))\r\n    }\r\n\r\n    fetchProviders() {\r\n\r\n        const url = `https://api.themoviedb.org/3/movie/${this.state.showID}/watch/providers?api_key=${apiKey}`;\r\n\r\n        fetch(url)\r\n        .then(response => response.json())\r\n        // .then(data => this.setState({\r\n        //     providers: data.results['US']['buy'].map( eachProvider => `${eachProvider.provider_name}`)\r\n        .then(data=>console.log(data)\r\n        )\r\n    }\r\n\r\n    castPopover(){\r\n        return (\r\n            <Popover id=\"popover-basic\" style={scrollable}>\r\n                <Popover.Content>\r\n                    <ul className=\"list-group flush\">\r\n                        {this.state.cast.map( listItem => (\r\n                            <li className=\"list-group-item\">{listItem}</li>\r\n                        ))}\r\n                    </ul>\r\n                </Popover.Content>\r\n            </Popover>\r\n        )\r\n    }\r\n\r\n    crewPopover(){\r\n        return (\r\n            <Popover id=\"popover-basic\" style={scrollable}>\r\n                <Popover.Content>\r\n                    <ul className=\"list-group\">\r\n                        {this.state.crew.map( listItem => (\r\n                            <li className=\"list-group-item\">{listItem}</li>\r\n                        ))}\r\n                    </ul>\r\n                </Popover.Content>\r\n            </Popover>\r\n        )\r\n    }\r\n\r\n    reviewsPopover(){\r\n        return (\r\n            <Popover id=\"popover-basic\" style={scrollable}>\r\n                <Popover.Content>\r\n                    <ul className=\"list-group flush\">\r\n                        {this.state.reviews.map( listItem => (\r\n                            <li className=\"list-group-item\">{listItem}</li>\r\n                        ))}\r\n                    </ul>\r\n                </Popover.Content>\r\n            </Popover>\r\n        )\r\n    }\r\n\r\n    videosPopover(){\r\n        return (\r\n            <Popover id=\"popover-basic\" style={scrollable}>\r\n                <Popover.Content>\r\n                    <ul className=\"list-group flush\">\r\n                        {this.state.videos.map( listItem => (\r\n                            <li className=\"list-group-item\">\r\n                                <a target=\"_blank\" rel=\"noreferrer\" href={listItem[0]}>{listItem[1]}</a>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                </Popover.Content>\r\n            </Popover>\r\n        )\r\n    }\r\n\r\n    popover(){\r\n        return (\r\n            <Popover id=\"popover-basic\" style={scrollable}>\r\n                <Popover.Title as=\"h3\">{this.state.detailsData.title}</Popover.Title>\r\n                <Popover.Content>\r\n                    <p><b>Summary</b><br />{this.state.summary}</p><hr />\r\n                    <p><b>Genres</b><br />{this.state.genres.join()}</p><hr />\r\n                    <p><b>Production Companies</b><br />{this.state.productionCompanies.join()}</p><hr />\r\n                    <p><b>Providers [Buyers]</b><br />{this.state.providers.join()}</p><hr />\r\n                    \r\n                    <Container>\r\n                        <Row>\r\n                            <OverlayTrigger trigger=\"click\" placement=\"auto\" overlay={this.castPopover()}>\r\n                                <Button variant=\"link\">Cast Details</Button>\r\n                            </OverlayTrigger>\r\n                        </Row>\r\n                        <Row>\r\n                            <OverlayTrigger trigger=\"click\" placement=\"auto\" overlay={this.crewPopover()}>\r\n                                <Button variant=\"link\">Crew Details</Button>\r\n                            </OverlayTrigger>\r\n                        </Row>\r\n                        <Row>\r\n                            <OverlayTrigger trigger=\"click\" placement=\"auto\" overlay={this.reviewsPopover()}>\r\n                                <Button variant=\"link\">Reviews</Button>\r\n                            </OverlayTrigger>\r\n                        </Row>\r\n                        <Row>\r\n                            <OverlayTrigger trigger=\"click\" placement=\"auto\" overlay={this.videosPopover()}>\r\n                                <Button variant=\"link\">Related Videos</Button>\r\n                            </OverlayTrigger>\r\n                        </Row>\r\n                    </Container>\r\n                </Popover.Content>\r\n            </Popover>\r\n        ); \r\n    } \r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <Card style={{ width: '15em',marginLeft:10,marginTop:10}} border=\"success\">\r\n                    \r\n                    <Card.Img\r\n                        style={{ height: '12em'}} \r\n                        variant=\"top\" \r\n                        src={imageBase+this.state.detailsData.poster_path}\r\n                    />\r\n\r\n                    <Card.Body>\r\n                        \r\n                        <Card.Title>\r\n                            {this.state.detailsData.title}\r\n                        </Card.Title>\r\n\r\n                        <Card.Text>\r\n                            Rating: {this.state.detailsData.vote_average} out of 10\r\n                        </Card.Text>\r\n                        \r\n                        <OverlayTrigger trigger=\"click\" placement=\"auto\" overlay = {this.popover()}>\r\n                            <Button variant=\"info\">More Details</Button>\r\n                        </OverlayTrigger>\r\n                    </Card.Body>\r\n                \r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MovieCard","C:\\Users\\nsnkr\\PROJECT_FOS\\frontend\\src\\components\\TodayTV.js",["114","115","116","117","118","119","120","121","122","123","124","125","126"],"C:\\Users\\nsnkr\\PROJECT_FOS\\frontend\\src\\components\\TVShowCard.js",[],{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","severity":1,"message":"132","line":5,"column":8,"nodeType":"133","messageId":"134","endLine":5,"endColumn":13},{"ruleId":"131","severity":1,"message":"135","line":6,"column":8,"nodeType":"133","messageId":"134","endLine":6,"endColumn":12},{"ruleId":"131","severity":1,"message":"136","line":7,"column":8,"nodeType":"133","messageId":"134","endLine":7,"endColumn":19},{"ruleId":"131","severity":1,"message":"137","line":8,"column":8,"nodeType":"133","messageId":"134","endLine":8,"endColumn":17},{"ruleId":"131","severity":1,"message":"138","line":12,"column":7,"nodeType":"133","messageId":"134","endLine":12,"endColumn":16},{"ruleId":"131","severity":1,"message":"139","line":30,"column":12,"nodeType":"133","messageId":"134","endLine":30,"endColumn":17},{"ruleId":"140","severity":1,"message":"141","line":34,"column":9,"nodeType":"142","endLine":41,"endColumn":10},{"ruleId":"131","severity":1,"message":"143","line":3,"column":27,"nodeType":"133","messageId":"134","endLine":3,"endColumn":33},{"ruleId":"131","severity":1,"message":"144","line":3,"column":35,"nodeType":"133","messageId":"134","endLine":3,"endColumn":40},{"ruleId":"131","severity":1,"message":"135","line":6,"column":8,"nodeType":"133","messageId":"134","endLine":6,"endColumn":12},{"ruleId":"131","severity":1,"message":"136","line":7,"column":8,"nodeType":"133","messageId":"134","endLine":7,"endColumn":19},{"ruleId":"131","severity":1,"message":"145","line":9,"column":8,"nodeType":"133","messageId":"134","endLine":9,"endColumn":12},{"ruleId":"131","severity":1,"message":"146","line":10,"column":8,"nodeType":"133","messageId":"134","endLine":10,"endColumn":16},{"ruleId":"131","severity":1,"message":"147","line":11,"column":8,"nodeType":"133","messageId":"134","endLine":11,"endColumn":22},{"ruleId":"131","severity":1,"message":"148","line":12,"column":8,"nodeType":"133","messageId":"134","endLine":12,"endColumn":14},{"ruleId":"131","severity":1,"message":"137","line":13,"column":8,"nodeType":"133","messageId":"134","endLine":13,"endColumn":17},{"ruleId":"131","severity":1,"message":"149","line":15,"column":10,"nodeType":"133","messageId":"134","endLine":15,"endColumn":19},{"ruleId":"150","severity":1,"message":"151","line":31,"column":68,"nodeType":"152","messageId":"153","endLine":31,"endColumn":69},{"ruleId":"131","severity":1,"message":"154","line":52,"column":17,"nodeType":"133","messageId":"134","endLine":52,"endColumn":24},{"ruleId":"131","severity":1,"message":"155","line":1,"column":17,"nodeType":"133","messageId":"134","endLine":1,"endColumn":25},{"ruleId":"150","severity":1,"message":"151","line":20,"column":103,"nodeType":"152","messageId":"153","endLine":20,"endColumn":104},{"ruleId":"150","severity":1,"message":"151","line":20,"column":114,"nodeType":"152","messageId":"153","endLine":20,"endColumn":115},{"ruleId":"131","severity":1,"message":"156","line":12,"column":20,"nodeType":"133","messageId":"134","endLine":12,"endColumn":24},{"ruleId":"131","severity":1,"message":"156","line":11,"column":19,"nodeType":"133","messageId":"134","endLine":11,"endColumn":23},{"ruleId":"131","severity":1,"message":"157","line":3,"column":10,"nodeType":"133","messageId":"134","endLine":3,"endColumn":15},{"ruleId":"131","severity":1,"message":"158","line":3,"column":31,"nodeType":"133","messageId":"134","endLine":3,"endColumn":35},{"ruleId":"131","severity":1,"message":"159","line":3,"column":37,"nodeType":"133","messageId":"134","endLine":3,"endColumn":46},{"ruleId":"131","severity":1,"message":"149","line":2,"column":65,"nodeType":"133","messageId":"134","endLine":2,"endColumn":74},{"ruleId":"131","severity":1,"message":"143","line":2,"column":27,"nodeType":"133","messageId":"134","endLine":2,"endColumn":33},{"ruleId":"131","severity":1,"message":"144","line":2,"column":35,"nodeType":"133","messageId":"134","endLine":2,"endColumn":40},{"ruleId":"131","severity":1,"message":"135","line":5,"column":8,"nodeType":"133","messageId":"134","endLine":5,"endColumn":12},{"ruleId":"131","severity":1,"message":"136","line":6,"column":8,"nodeType":"133","messageId":"134","endLine":6,"endColumn":19},{"ruleId":"131","severity":1,"message":"160","line":7,"column":8,"nodeType":"133","messageId":"134","endLine":7,"endColumn":14},{"ruleId":"131","severity":1,"message":"145","line":8,"column":8,"nodeType":"133","messageId":"134","endLine":8,"endColumn":12},{"ruleId":"131","severity":1,"message":"146","line":9,"column":8,"nodeType":"133","messageId":"134","endLine":9,"endColumn":16},{"ruleId":"131","severity":1,"message":"147","line":10,"column":8,"nodeType":"133","messageId":"134","endLine":10,"endColumn":22},{"ruleId":"131","severity":1,"message":"148","line":11,"column":8,"nodeType":"133","messageId":"134","endLine":11,"endColumn":14},{"ruleId":"131","severity":1,"message":"137","line":12,"column":8,"nodeType":"133","messageId":"134","endLine":12,"endColumn":17},{"ruleId":"131","severity":1,"message":"161","line":13,"column":8,"nodeType":"133","messageId":"134","endLine":13,"endColumn":17},{"ruleId":"131","severity":1,"message":"149","line":14,"column":10,"nodeType":"133","messageId":"134","endLine":14,"endColumn":19},{"ruleId":"131","severity":1,"message":"154","line":51,"column":17,"nodeType":"133","messageId":"134","endLine":51,"endColumn":24},"no-native-reassign",["162"],"no-negated-in-lhs",["163"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'Card' is defined but never used.","'CardContent' is defined but never used.","'CardMedia' is defined but never used.","'imageBase' is assigned a value but never used.","'error' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Router' is defined but never used.","'Route' is defined but never used.","'List' is defined but never used.","'ListItem' is defined but never used.","'ListItemAvatar' is defined but never used.","'Avatar' is defined but never used.","'CardGroup' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'imgAddr' is assigned a value but never used.","'useState' is defined but never used.","'user' is assigned a value but never used.","'Alert' is defined but never used.","'Form' is defined but never used.","'ListGroup' is defined but never used.","'Button' is defined but never used.","'MovieCard' is defined but never used.","no-global-assign","no-unsafe-negation"]