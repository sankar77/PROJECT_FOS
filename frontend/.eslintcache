[{"C:\\Users\\nsnkr\\PROJECT_FOS\\frontend\\src\\index.js":"1","C:\\Users\\nsnkr\\PROJECT_FOS\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\nsnkr\\PROJECT_FOS\\frontend\\src\\App.js":"3","C:\\Users\\nsnkr\\PROJECT_FOS\\frontend\\src\\components\\NavBar.js":"4","C:\\Users\\nsnkr\\PROJECT_FOS\\frontend\\src\\components\\AboutUs.js":"5","C:\\Users\\nsnkr\\PROJECT_FOS\\frontend\\src\\components\\SignUp.js":"6","C:\\Users\\nsnkr\\PROJECT_FOS\\frontend\\src\\components\\Login.js":"7","C:\\Users\\nsnkr\\PROJECT_FOS\\frontend\\src\\components\\Profile.js":"8","C:\\Users\\nsnkr\\PROJECT_FOS\\frontend\\src\\components\\Account.js":"9","C:\\Users\\nsnkr\\PROJECT_FOS\\frontend\\src\\components\\ForgotPassword.js":"10","C:\\Users\\nsnkr\\PROJECT_FOS\\frontend\\src\\components\\UpdateAccount.js":"11","C:\\Users\\nsnkr\\PROJECT_FOS\\frontend\\src\\contexts\\AuthProvider.js":"12","C:\\Users\\nsnkr\\PROJECT_FOS\\frontend\\src\\firebase.js":"13","C:\\Users\\nsnkr\\PROJECT_FOS\\frontend\\src\\components\\Center.js":"14","C:\\Users\\nsnkr\\PROJECT_FOS\\frontend\\src\\components\\MovieCard.js":"15","C:\\Users\\nsnkr\\PROJECT_FOS\\frontend\\src\\components\\TVShowCard.js":"16","C:\\Users\\nsnkr\\PROJECT_FOS\\frontend\\src\\components\\Preference.js":"17"},{"size":517,"mtime":1615334050206,"results":"18","hashOfConfig":"19"},{"size":375,"mtime":1615334050211,"results":"20","hashOfConfig":"19"},{"size":1566,"mtime":1616710698918,"results":"21","hashOfConfig":"19"},{"size":4561,"mtime":1616710669276,"results":"22","hashOfConfig":"19"},{"size":1564,"mtime":1615746666175,"results":"23","hashOfConfig":"19"},{"size":3517,"mtime":1616710698923,"results":"24","hashOfConfig":"19"},{"size":2993,"mtime":1616448070576,"results":"25","hashOfConfig":"19"},{"size":111,"mtime":1616448070579,"results":"26","hashOfConfig":"19"},{"size":1271,"mtime":1616448070574,"results":"27","hashOfConfig":"19"},{"size":2631,"mtime":1616448070576,"results":"28","hashOfConfig":"19"},{"size":3969,"mtime":1616448070581,"results":"29","hashOfConfig":"19"},{"size":1532,"mtime":1616448070587,"results":"30","hashOfConfig":"19"},{"size":593,"mtime":1615746666177,"results":"31","hashOfConfig":"19"},{"size":245,"mtime":1616448070575,"results":"32","hashOfConfig":"19"},{"size":8125,"mtime":1616710669274,"results":"33","hashOfConfig":"19"},{"size":10164,"mtime":1616710669277,"results":"34","hashOfConfig":"19"},{"size":4490,"mtime":1616710698919,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1e1q63x",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\nsnkr\\PROJECT_FOS\\frontend\\src\\index.js",[],["74","75"],"C:\\Users\\nsnkr\\PROJECT_FOS\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\nsnkr\\PROJECT_FOS\\frontend\\src\\App.js",[],"C:\\Users\\nsnkr\\PROJECT_FOS\\frontend\\src\\components\\NavBar.js",["76","77"],"C:\\Users\\nsnkr\\PROJECT_FOS\\frontend\\src\\components\\AboutUs.js",[],"C:\\Users\\nsnkr\\PROJECT_FOS\\frontend\\src\\components\\SignUp.js",[],"C:\\Users\\nsnkr\\PROJECT_FOS\\frontend\\src\\components\\Login.js",["78"],"import { Form, Button, Card, Alert } from 'react-bootstrap'\r\nimport { useRef, useState } from \"react\";\r\nimport { useAuth } from \"../contexts/AuthProvider\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport Center from \"./Center\";\r\n\r\nconst Login = () => {\r\n\r\n    const emailRef = useRef();\r\n    const passwordRef = useRef();\r\n    const {logIn, user} = useAuth();\r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const history = useHistory();\r\n\r\n\r\n    async function logInHandler(event) {\r\n        event.preventDefault();\r\n\r\n        try {\r\n            setError('');\r\n            setLoading(true);\r\n            await logIn(\r\n                emailRef.current.value,\r\n                passwordRef.current.value\r\n            );\r\n            history.push('/');\r\n        } catch {\r\n            setError('Failed to sign in.');\r\n        }\r\n\r\n        setLoading(false);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Center>\r\n                <Card style={{minWidth: 600}}>\r\n                    <Card.Body>\r\n                        <h1 style={{textAlign: 'center'}}>Log In</h1>\r\n                        {error && <Alert variant='danger'>{error}</Alert>}\r\n                        <Form onSubmit={logInHandler}>\r\n                            <Form.Group id='email'>\r\n                                <Form.Label>Email Address</Form.Label>\r\n                                <Form.Control\r\n                                    type='email'\r\n                                    placeholder='Enter email'\r\n                                    ref={emailRef}\r\n                                    required\r\n                                />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group id='password'>\r\n                                <Form.Label>Password</Form.Label>\r\n                                <Form.Control\r\n                                    type='password'\r\n                                    placeholder='Password'\r\n                                    ref={passwordRef}\r\n                                    required\r\n                                />\r\n                            </Form.Group>\r\n\r\n                            <Button\r\n                                disabled={loading}\r\n                                className='w-100'\r\n                                as=\"input\"\r\n                                type=\"submit\"\r\n                                value=\"Submit\"\r\n                            />\r\n                        </Form>\r\n                        <div className='w-100 text-center mt-4'>\r\n                            <Link to='/forgot-password'>Forgot Password</Link>\r\n                        </div>\r\n                    </Card.Body>\r\n                </Card>\r\n            </Center>\r\n            <div className='w-100 text-center mt-2'>\r\n                Don't have an account? <Link to='/signup'>Sign Up</Link>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Login;","C:\\Users\\nsnkr\\PROJECT_FOS\\frontend\\src\\components\\Profile.js",[],"C:\\Users\\nsnkr\\PROJECT_FOS\\frontend\\src\\components\\Account.js",["79","80","81"],"import React from 'react';\r\nimport { useAuth } from \"../contexts/AuthProvider\";\r\nimport { Alert, Button, Card, Form, ListGroup } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Account = () => {\r\n    const {user} = useAuth();\r\n\r\n    return (\r\n        <div style={{display: 'flex', justifyContent: 'center', alignContent: 'center'}}>\r\n            <Card style={{minWidth: 600}}>\r\n                <Card.Body>\r\n                    <h1 style={{textAlign: 'center'}}>Account Information</h1>\r\n\r\n                    <div style={{textAlign: 'center'}}>\r\n                        <strong>Email: </strong>\r\n                        <span>{user.email}</span>\r\n                    </div>\r\n                    <Link to='/update-account'>\r\n                        <div className=\"text-center mt-4\">\r\n                            <Button\r\n                                className='w-50 center'\r\n                                as=\"input\"\r\n                                type=\"submit\"\r\n                                value=\"Update Account Information\">\r\n                            </Button>\r\n                        </div>\r\n                    </Link>\r\n                </Card.Body>\r\n            </Card>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Account;\r\n","C:\\Users\\nsnkr\\PROJECT_FOS\\frontend\\src\\components\\ForgotPassword.js",[],"C:\\Users\\nsnkr\\PROJECT_FOS\\frontend\\src\\components\\UpdateAccount.js",[],"C:\\Users\\nsnkr\\PROJECT_FOS\\frontend\\src\\contexts\\AuthProvider.js",[],"C:\\Users\\nsnkr\\PROJECT_FOS\\frontend\\src\\firebase.js",[],"C:\\Users\\nsnkr\\PROJECT_FOS\\frontend\\src\\components\\Center.js",[],"C:\\Users\\nsnkr\\PROJECT_FOS\\frontend\\src\\components\\MovieCard.js",["82"],"import React, {Component} from \"react\";\r\nimport { Button, Card, OverlayTrigger, Popover, Container, Row, CardGroup } from \"react-bootstrap\";\r\n\r\nconst apiKey=\"42d845ec0caf10ecc9f34f1648197aee\";\r\nconst imageBase = \"http://image.tmdb.org/t/p/w185\";\r\nconst videoBase = \"https://www.youtube.com/watch?v=\";\r\nconst scrollable = {\r\n    height: '40rem',\r\n    overflow: 'auto'\r\n};\r\n\r\nclass MovieCard extends Component {\r\n\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            showID: props.id,\r\n            detailsData: {},\r\n            genres: [],\r\n            productionCompanies: [],\r\n            cast: [],\r\n            crew: [],\r\n            reviews: [],\r\n            videos: [],\r\n            providers: [],\r\n            summary: \"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.fetchDetails();\r\n        this.fetchCastAndCrew();\r\n        this.fetchReviews();\r\n        this.fetchVideos();\r\n        this.fetchProviders();\r\n    }\r\n\r\n    fetchDetails(){\r\n\r\n        const url = `https://api.themoviedb.org/3/movie/${this.state.showID}?api_key=${apiKey}&language=en-US&external_source=imdb_id`;\r\n        \r\n        fetch(url)\r\n        .then(response => response.json())\r\n        .then(data => \r\n            this.setState({\r\n                detailsData: data,\r\n                genres: data.genres.map( genreInfo => genreInfo.name ),\r\n                productionCompanies: data.production_companies.map( prodInfo => prodInfo.name ),\r\n                summary: data.overview\r\n            }));\r\n        \r\n    }\r\n\r\n    fetchCastAndCrew() {\r\n        const url = `https://api.themoviedb.org/3/movie/${this.state.showID}/credits?api_key=${apiKey}&language=en-US`;\r\n\r\n        fetch(url)\r\n        .then(response => response.json())\r\n        .then(data => this.setState({\r\n            cast: data.cast.map( eachCast => `${eachCast.name}`),\r\n            crew: data.crew.map( eachCrew => `${eachCrew.name} [${eachCrew.department}]`)\r\n        }));\r\n    }\r\n\r\n    fetchReviews() {\r\n        \r\n        const url = `https://api.themoviedb.org/3/movie/${this.state.showID}/reviews?api_key=${apiKey}`;\r\n\r\n        fetch(url)\r\n        .then(response => response.json())\r\n        .then(data => this.setState({\r\n            reviews: data.results.map( eachReviewInfo => `${eachReviewInfo.content} - ${eachReviewInfo.author}` )\r\n        }));\r\n    }\r\n\r\n    fetchVideos() {\r\n\r\n        const url = `https://api.themoviedb.org/3/movie/${this.state.showID}/videos?api_key=${apiKey}&language=en-US`;\r\n\r\n        fetch(url)\r\n        .then(response => response.json())\r\n        .then(data => this.setState({\r\n            videos: data.results.map( eachVideoInfo => [`${videoBase}${eachVideoInfo.key}`, `${eachVideoInfo.type}`] )\r\n        }))\r\n    }\r\n\r\n    fetchProviders() {\r\n\r\n        const url = `https://api.themoviedb.org/3/movie/${this.state.showID}/watch/providers?api_key=${apiKey}`;\r\n\r\n        fetch(url)\r\n        .then(response => response.json())\r\n        // .then(data => this.setState({\r\n        //     providers: data.results['US']['buy'].map( eachProvider => `${eachProvider.provider_name}`)\r\n        .then(data=>console.log(data)\r\n        )\r\n    }\r\n\r\n    castPopover(){\r\n        return (\r\n            <Popover id=\"popover-basic\" style={scrollable}>\r\n                <Popover.Content>\r\n                    <ul className=\"list-group flush\">\r\n                        {this.state.cast.map( listItem => (\r\n                            <li className=\"list-group-item\">{listItem}</li>\r\n                        ))}\r\n                    </ul>\r\n                </Popover.Content>\r\n            </Popover>\r\n        )\r\n    }\r\n\r\n    crewPopover(){\r\n        return (\r\n            <Popover id=\"popover-basic\" style={scrollable}>\r\n                <Popover.Content>\r\n                    <ul className=\"list-group\">\r\n                        {this.state.crew.map( listItem => (\r\n                            <li className=\"list-group-item\">{listItem}</li>\r\n                        ))}\r\n                    </ul>\r\n                </Popover.Content>\r\n            </Popover>\r\n        )\r\n    }\r\n\r\n    reviewsPopover(){\r\n        return (\r\n            <Popover id=\"popover-basic\" style={scrollable}>\r\n                <Popover.Content>\r\n                    <ul className=\"list-group flush\">\r\n                        {this.state.reviews.map( listItem => (\r\n                            <li className=\"list-group-item\">{listItem}</li>\r\n                        ))}\r\n                    </ul>\r\n                </Popover.Content>\r\n            </Popover>\r\n        )\r\n    }\r\n\r\n    videosPopover(){\r\n        return (\r\n            <Popover id=\"popover-basic\" style={scrollable}>\r\n                <Popover.Content>\r\n                    <ul className=\"list-group flush\">\r\n                        {this.state.videos.map( listItem => (\r\n                            <li className=\"list-group-item\">\r\n                                <a target=\"_blank\" rel=\"noreferrer\" href={listItem[0]}>{listItem[1]}</a>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                </Popover.Content>\r\n            </Popover>\r\n        )\r\n    }\r\n\r\n    popover(){\r\n        return (\r\n            <Popover id=\"popover-basic\" style={scrollable}>\r\n                <Popover.Title as=\"h3\">{this.state.detailsData.title}</Popover.Title>\r\n                <Popover.Content>\r\n                    <p><b>Summary</b><br />{this.state.summary}</p><hr />\r\n                    <p><b>Genres</b><br />{this.state.genres.join()}</p><hr />\r\n                    <p><b>Production Companies</b><br />{this.state.productionCompanies.join()}</p><hr />\r\n                    <p><b>Providers [Buyers]</b><br />{this.state.providers.join()}</p><hr />\r\n                    \r\n                    <Container>\r\n                        <Row>\r\n                            <OverlayTrigger trigger=\"click\" placement=\"auto\" overlay={this.castPopover()}>\r\n                                <Button variant=\"link\">Cast Details</Button>\r\n                            </OverlayTrigger>\r\n                        </Row>\r\n                        <Row>\r\n                            <OverlayTrigger trigger=\"click\" placement=\"auto\" overlay={this.crewPopover()}>\r\n                                <Button variant=\"link\">Crew Details</Button>\r\n                            </OverlayTrigger>\r\n                        </Row>\r\n                        <Row>\r\n                            <OverlayTrigger trigger=\"click\" placement=\"auto\" overlay={this.reviewsPopover()}>\r\n                                <Button variant=\"link\">Reviews</Button>\r\n                            </OverlayTrigger>\r\n                        </Row>\r\n                        <Row>\r\n                            <OverlayTrigger trigger=\"click\" placement=\"auto\" overlay={this.videosPopover()}>\r\n                                <Button variant=\"link\">Related Videos</Button>\r\n                            </OverlayTrigger>\r\n                        </Row>\r\n                    </Container>\r\n                </Popover.Content>\r\n            </Popover>\r\n        ); \r\n    } \r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <Card style={{ width: '15em',marginLeft:10,marginTop:10}} border=\"success\">\r\n                    \r\n                    <Card.Img\r\n                        style={{ height: '12em'}} \r\n                        variant=\"top\" \r\n                        src={imageBase+this.state.detailsData.poster_path}\r\n                    />\r\n\r\n                    <Card.Body>\r\n                        \r\n                        <Card.Title>\r\n                            {this.state.detailsData.title}\r\n                        </Card.Title>\r\n\r\n                        <Card.Text>\r\n                            Rating: {this.state.detailsData.vote_average} out of 10\r\n                        </Card.Text>\r\n                        \r\n                        <OverlayTrigger trigger=\"click\" placement=\"auto\" overlay = {this.popover()}>\r\n                            <Button variant=\"info\">More Details</Button>\r\n                        </OverlayTrigger>\r\n                    </Card.Body>\r\n                \r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MovieCard","C:\\Users\\nsnkr\\PROJECT_FOS\\frontend\\src\\components\\TVShowCard.js",[],"C:\\Users\\nsnkr\\PROJECT_FOS\\frontend\\src\\components\\Preference.js",[],{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":15,"column":12,"nodeType":"89","messageId":"90","endLine":15,"endColumn":17},{"ruleId":"91","severity":1,"message":"92","line":19,"column":9,"nodeType":"93","endLine":26,"endColumn":10},{"ruleId":"87","severity":1,"message":"94","line":11,"column":19,"nodeType":"89","messageId":"90","endLine":11,"endColumn":23},{"ruleId":"87","severity":1,"message":"95","line":3,"column":10,"nodeType":"89","messageId":"90","endLine":3,"endColumn":15},{"ruleId":"87","severity":1,"message":"96","line":3,"column":31,"nodeType":"89","messageId":"90","endLine":3,"endColumn":35},{"ruleId":"87","severity":1,"message":"97","line":3,"column":37,"nodeType":"89","messageId":"90","endLine":3,"endColumn":46},{"ruleId":"87","severity":1,"message":"98","line":2,"column":65,"nodeType":"89","messageId":"90","endLine":2,"endColumn":74},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],"no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'user' is assigned a value but never used.","'Alert' is defined but never used.","'Form' is defined but never used.","'ListGroup' is defined but never used.","'CardGroup' is defined but never used.","no-global-assign","no-unsafe-negation"]