{"version":3,"sources":["firebase.js","contexts/AuthProvider.js","components/NavBar.js","components/AboutUs.js","components/Center.js","components/SignUp.js","components/Login.js","components/ForgotPassword.js","components/Profile.js","components/Account.js","components/UpdateAccount.js","components/Preference.js","components/MovieCard.js","components/Filter.js","components/MoviesList.js","components/Search.js","components/TVShowCard.js","components/TodayTV.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","db","firestore","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","user","setUser","loading","setLoading","useEffect","onAuthStateChanged","value","signUp","email","password","createUserWithEmailAndPassword","logIn","signInWithEmailAndPassword","logOut","signOut","resetPassword","sendPasswordResetEmail","updateEmail","updatePassword","Provider","result","NavBar","setError","history","useHistory","customToggle","forwardRef","ref","onClick","href","e","preventDefault","xmlns","width","height","fill","className","viewBox","d","fillRule","id","htmlFor","type","placeholder","aria-label","event","val","document","getElementById","push","data","Dropdown","Toggle","as","Menu","Item","eventKey","to","Person","props","person","firstName","lastName","AboutUs","state","aboutusall","collection","get","then","aboutUsAllArray","forEach","doc","setState","catch","error","console","log","this","map","currentPerson","_id","aboutusList","Component","Center","style","display","justifyContent","alignContent","SignUp","emailRef","useRef","passwordRef","passwordConfirmRef","a","current","Card","minWidth","Body","textAlign","Alert","variant","Form","onSubmit","Group","Label","Control","required","controlId","Button","disabled","Login","ForgotPassword","success","setSuccess","Profile","Account","UpdateAccount","promise","Promise","all","finally","defaultValue","Preference","actorRef","directorRef","movieRef","actorSelections","directorSelections","movieSelections","genreSelection","handleSubmit","split","s","trim","genreSelections","genre","uid","set","setTimeout","rows","options","name","displayValue","onSelect","selectedList","selectedItem","scrollable","overflow","MovieCard","showID","detailsData","genres","productionCompanies","cast","crew","reviews","videos","providers","summary","Popover","Content","listItem","target","rel","Title","title","join","Container","Row","OverlayTrigger","trigger","rootClose","placement","overlay","castPopover","crewPopover","reviewsPopover","videosPopover","marginLeft","marginTop","border","Img","src","poster_path","Text","vote_average","popover","Filter","handleChange","filter_value","window","sessionStorage","setItem","baseURL","latestMoviesData","axios","response","genreList","latestMovies","latestMoviesURLs","tempArray","i","length","currentMovieData","go","getItem","location","movie","movieData","splice","size","color","FormControl","InputLabel","Select","native","age","onChange","inputProps","showFilteredMovies","MoviesList","filter","filterValue","filteredMovies","filteredMoviesData","movieList","original_title","original_language","showMovies","imageBase","Search","searchResults","search_query","backdrop_path","showSearchResults","TVShowCard","seasons","seasonItem","alt","seasonItemPopover","seasonsPopover","TodayTV","tvShows","tvShowsData","latestTvshowData","tvshowList","latestTvshows","latestTvURLs","currentTvData","tvshow","tvShowData","showtvShows","App","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.59942920.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBvpsnlTvYWK4NmAp-OaNacNo41ZUuKQMM\",\r\n    authDomain: \"movies-app-5828.firebaseapp.com\",\r\n    projectId: \"movies-app-5828\",\r\n    storageBucket: \"movies-app-5828.appspot.com\",\r\n    messagingSenderId: \"825007569291\",\r\n    appId: \"1:825007569291:web:0f708ee18492bda785d78e\"\r\n}\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const auth = firebase.auth();\r\nexport const db = firebase.firestore();\r\n\r\n// eslint-disable-next-line\r\nexport default firebase;","import React, { useContext, useEffect, useState } from 'react';\r\nimport firebase from '../firebase';\r\n\r\nconst AuthContext = React.createContext();\r\n\r\nexport function useAuth() {\r\n    return useContext(AuthContext);\r\n}\r\n\r\nexport const AuthProvider = ({children}) => {\r\n    const [user, setUser] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    const signUp = (email, password) => {\r\n        return firebase.auth().createUserWithEmailAndPassword(email, password);\r\n    }\r\n\r\n    const logIn = (email, password) => {\r\n        return firebase.auth().signInWithEmailAndPassword(email, password);\r\n    }\r\n\r\n    const logOut = () => {\r\n        return firebase.auth().signOut();\r\n    }\r\n\r\n    const resetPassword = (email) => {\r\n        return firebase.auth().sendPasswordResetEmail(email);\r\n    };\r\n\r\n    const updateEmail = (email) => {\r\n        return user.updateEmail(email);\r\n    };\r\n\r\n    const updatePassword = (password) => {\r\n        return user.updatePassword(password);\r\n    };\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = firebase.auth().onAuthStateChanged(user => {\r\n            setUser(user);\r\n            setLoading(false);\r\n        });\r\n\r\n        return unsubscribe;\r\n    }, []);\r\n\r\n    const value = {\r\n        user,\r\n        signUp,\r\n        logIn,\r\n        logOut,\r\n        resetPassword,\r\n        updateEmail,\r\n        updatePassword\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider value={value}>\r\n            {!loading && children}\r\n        </AuthContext.Provider>\r\n    );\r\n}\r\n","import React, { useState } from 'react'\r\nimport { useAuth } from \"../contexts/AuthProvider\";\r\nimport { Dropdown } from \"react-bootstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport axios from 'axios'\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\n\r\nconst apiKey = \"42d845ec0caf10ecc9f34f1648197aee\"\r\nconst imageBase = \"http://image.tmdb.org/t/p/w300\";\r\nvar result = [];\r\n\r\nconst NavBar = () => {\r\n    const onClick = (event) => {\r\n        event.preventDefault();\r\n        const val = document.getElementById('searchValue').value;\r\n        \r\n        history.push('/search',{data:val});\r\n        \r\n    }\r\n\r\n    const {user, logOut} = useAuth();\r\n    const [error, setError] = useState('');\r\n    const history = useHistory();\r\n\r\n    const customToggle = React.forwardRef(({children, onClick}, ref) => (\r\n        <a\r\n            href=\"\"\r\n            ref={ref}\r\n            onClick={e => {\r\n                e.preventDefault();\r\n                onClick(e);\r\n            }}\r\n        >\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"25\" height=\"25\" fill=\"white\"\r\n                 className=\"bi bi-person-circle\" viewBox=\"0 0 16 16\">\r\n                <path d=\"M11 6a3 3 0 1 1-6 0 3 3 0 0 1 6 0z\"/>\r\n                <path fillRule=\"evenodd\"\r\n                      d=\"M0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8zm8-7a7 7 0 0 0-5.468 11.37C3.242 11.226 4.805 10 8 10s4.757 1.225 5.468 2.37A7 7 0 0 0 8 1z\"/>\r\n            </svg>\r\n            {children}\r\n        </a>\r\n    ));\r\n\r\n    const signOutHandler = (event) => {\r\n        setError('');\r\n        try {\r\n            logOut();\r\n            history.push('/');\r\n        } catch {\r\n            setError('Failed to sign out.');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='container'>\r\n            <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav mr-auto col-3\">\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" href=\"/\">Home</a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" href=\"/aboutuspage\">About Us</a>\r\n                        </li>\r\n                    </ul>\r\n                    <form className=\"form-inline my-2 my-lg-0 col-6\">\r\n                        <label htmlFor=\"searchValue\"></label>\r\n                    <input className=\"form-control mr-sm-2 col-8\" type=\"search\" placeholder=\"Search Movies/TV Shows\" aria-label=\"Search\" id=\"searchValue\"/>\r\n                    <button className=\"btn btn-outline-primary my-2 my-sm-0\" type=\"submit\" onClick={onClick}>Search</button>\r\n                    <ul>\r\n                        {result}\r\n                    </ul>\r\n                    </form>\r\n                    <ul className=\"navbar-nav mr-auto\">\r\n                        {user != null\r\n                            ? <>\r\n                                <li className=\"nav-item\">\r\n                                    <Dropdown>\r\n                                        <Dropdown.Toggle as={customToggle} id=\"dropdown-custom-components\">\r\n                                        </Dropdown.Toggle>\r\n\r\n                                        <Dropdown.Menu>\r\n                                            <Dropdown.Item eventKey=\"1\">\r\n                                                <Link to='/profile'>Profile</Link>\r\n                                            </Dropdown.Item>\r\n                                            <Dropdown.Item eventKey=\"2\">\r\n                                                <Link to='/account'>Account</Link>\r\n                                            </Dropdown.Item>\r\n                                            <Dropdown.Item eventKey=\"3\" onClick={signOutHandler}>\r\n                                                Sign Out\r\n                                            </Dropdown.Item>\r\n                                        </Dropdown.Menu>\r\n                                    </Dropdown>\r\n                                </li>\r\n                            </>\r\n                            : <>\r\n                                <li className=\"nav-item\">\r\n                                    <a className=\"nav-link\" href=\"/login\">Log In</a>\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <a className=\"nav-link\" href=\"/signup\">Sign Up</a>\r\n                                </li>\r\n                            </>\r\n                        }\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NavBar\r\n","import React, { Component } from 'react';\r\nimport { db } from '../firebase';\r\n\r\nconst Person = props => (\r\n    <ul className=\"list-group list-group-flush\">\r\n        <li className=\"list-group-item\">{props.person.firstName}</li>\r\n        <li className=\"list-group-item\">{props.person.lastName}</li>\r\n        <li className=\"list-group-item\">{props.person.email}</li>\r\n    </ul>\r\n)\r\n\r\nexport default class AboutUs extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {aboutusall: []};\r\n    }\r\n\r\n    \r\n\r\n    componentDidMount() {\r\n        db.collection('aboutus')\r\n        .get()\r\n        .then(data => {\r\n            const aboutUsAllArray = []\r\n            data.forEach(doc => {                \r\n                aboutUsAllArray.push(doc.data());\r\n            });\r\n            this.setState( {aboutusall: aboutUsAllArray} );\r\n        })\r\n        .catch( error => console.log(error) )\r\n      }\r\n\r\n    aboutusList() {\r\n        return this.state.aboutusall.map(currentPerson => {\r\n            return (\r\n                <div className=\"container\">\r\n                    <li  className=\"list-group-item col-4\"><Person person={currentPerson} key={currentPerson._id}/></li>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <ul className=\"list-group\">\r\n                    {this.aboutusList() }\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst Center = ({children}) => {\r\n    return (\r\n        <div style={{display: 'flex', justifyContent:'center', alignContent:'center'}}>\r\n            {children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Center;\r\n","import { Form, Button, Card, Alert } from 'react-bootstrap'\r\nimport { useRef, useState } from \"react\";\r\nimport { useAuth } from \"../contexts/AuthProvider\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport Center from \"./Center\";\r\n\r\nconst SignUp = () => {\r\n\r\n    const emailRef = useRef();\r\n    const passwordRef = useRef();\r\n    const passwordConfirmRef = useRef();\r\n    const {signUp} = useAuth();\r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const history = useHistory();\r\n\r\n\r\n    async function signUpHandler(event) {\r\n        event.preventDefault();\r\n\r\n        if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n            return setError('Passwords do not match.');\r\n        }\r\n\r\n        try {\r\n            setError('');\r\n            setLoading(true);\r\n            await signUp(\r\n                emailRef.current.value,\r\n                passwordRef.current.value\r\n            );\r\n            history.push('/pref');\r\n        } catch {\r\n            setError('Failed to create an account.');\r\n        }\r\n\r\n        setLoading(false);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Center>\r\n                <Card style={{minWidth: 600}}>\r\n                    <Card.Body>\r\n                        <h1 style={{textAlign: 'center'}}>Sign Up</h1>\r\n                        {error && <Alert variant='danger'>{error}</Alert>}\r\n                        <Form onSubmit={signUpHandler}>\r\n                            <Form.Group id='email'>\r\n                                <Form.Label>Email Address</Form.Label>\r\n                                <Form.Control\r\n                                    type='email'\r\n                                    placeholder='Enter email'\r\n                                    ref={emailRef}\r\n                                    required\r\n                                />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group id='password'>\r\n                                <Form.Label>Password</Form.Label>\r\n                                <Form.Control\r\n                                    type='password'\r\n                                    placeholder='Password'\r\n                                    ref={passwordRef}\r\n                                    required\r\n                                />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='formBasicPassword'>\r\n                                <Form.Label>Confirm Password</Form.Label>\r\n                                <Form.Control\r\n                                    type='password'\r\n                                    placeholder='Password'\r\n                                    ref={passwordConfirmRef}\r\n                                    required\r\n                                />\r\n                            </Form.Group>\r\n\r\n                            <Button\r\n                                disabled={loading}\r\n                                className='w-100'\r\n                                as=\"input\"\r\n                                type=\"submit\"\r\n                                value=\"Submit\"\r\n                            />\r\n                        </Form>\r\n                    </Card.Body>\r\n                </Card>\r\n            </Center>\r\n            <div className='w-100 text-center mt-2'>\r\n                Already have an account? <Link to='/login'>Log In</Link>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SignUp;","import { Form, Button, Card, Alert } from 'react-bootstrap'\r\nimport { useRef, useState } from \"react\";\r\nimport { useAuth } from \"../contexts/AuthProvider\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport Center from \"./Center\";\r\n\r\nconst Login = () => {\r\n\r\n    const emailRef = useRef();\r\n    const passwordRef = useRef();\r\n    const {logIn, user} = useAuth();\r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const history = useHistory();\r\n\r\n\r\n    async function logInHandler(event) {\r\n        event.preventDefault();\r\n\r\n        try {\r\n            setError('');\r\n            setLoading(true);\r\n            await logIn(\r\n                emailRef.current.value,\r\n                passwordRef.current.value\r\n            );\r\n            history.push('/');\r\n        } catch {\r\n            setError('Failed to sign in.');\r\n        }\r\n\r\n        setLoading(false);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Center>\r\n                <Card style={{minWidth: 600}}>\r\n                    <Card.Body>\r\n                        <h1 style={{textAlign: 'center'}}>Log In</h1>\r\n                        {error && <Alert variant='danger'>{error}</Alert>}\r\n                        <Form onSubmit={logInHandler}>\r\n                            <Form.Group id='email'>\r\n                                <Form.Label>Email Address</Form.Label>\r\n                                <Form.Control\r\n                                    type='email'\r\n                                    placeholder='Enter email'\r\n                                    ref={emailRef}\r\n                                    required\r\n                                />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group id='password'>\r\n                                <Form.Label>Password</Form.Label>\r\n                                <Form.Control\r\n                                    type='password'\r\n                                    placeholder='Password'\r\n                                    ref={passwordRef}\r\n                                    required\r\n                                />\r\n                            </Form.Group>\r\n\r\n                            <Button\r\n                                disabled={loading}\r\n                                className='w-100'\r\n                                as=\"input\"\r\n                                type=\"submit\"\r\n                                value=\"Submit\"\r\n                            />\r\n                        </Form>\r\n                        <div className='w-100 text-center mt-4'>\r\n                            <Link to='/forgot-password'>Forgot Password</Link>\r\n                        </div>\r\n                    </Card.Body>\r\n                </Card>\r\n            </Center>\r\n            <div className='w-100 text-center mt-2'>\r\n                Don't have an account? <Link to='/signup'>Sign Up</Link>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Login;","import { Form, Button, Card, Alert } from 'react-bootstrap'\r\nimport { useRef, useState } from \"react\";\r\nimport { useAuth } from \"../contexts/AuthProvider\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Center from \"./Center\";\r\n\r\nconst ForgotPassword = () => {\r\n\r\n    const emailRef = useRef();\r\n    const {resetPassword} = useAuth();\r\n    const [error, setError] = useState('');\r\n    const [success, setSuccess] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n\r\n\r\n    async function resetPasswordHandler(event) {\r\n        event.preventDefault();\r\n\r\n        try {\r\n            setSuccess('');\r\n            setError('');\r\n            setLoading(true);\r\n            await resetPassword(\r\n                emailRef.current.value\r\n            );\r\n            setSuccess('Check your email to reset password');\r\n        } catch {\r\n            setError('Failed to reset password.');\r\n        }\r\n\r\n        setLoading(false);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Center>\r\n                <Card style={{minWidth: 600}}>\r\n                    <Card.Body>\r\n                        <h1 style={{textAlign: 'center'}}>Reset Password</h1>\r\n                        {error && <Alert variant='danger'>{error}</Alert>}\r\n                        {success && <Alert variant='success'>{success}</Alert>}\r\n                        <Form onSubmit={resetPasswordHandler}>\r\n                            <Form.Group id='email'>\r\n                                <Form.Label>Email Address</Form.Label>\r\n                                <Form.Control\r\n                                    type='email'\r\n                                    placeholder='Enter email'\r\n                                    ref={emailRef}\r\n                                    required\r\n                                />\r\n                            </Form.Group>\r\n\r\n                            <Button\r\n                                disabled={loading}\r\n                                className='w-100'\r\n                                as=\"input\"\r\n                                type=\"submit\"\r\n                                value=\"Submit\"\r\n                            />\r\n                        </Form>\r\n                        <div className='w-100 text-center mt-4'>\r\n                            <Link to='/login'>Login</Link>\r\n                        </div>\r\n                    </Card.Body>\r\n                </Card>\r\n            </Center>\r\n            <div className='w-100 text-center mt-2'>\r\n                Don't have an account? <Link to='/signup'>Sign Up</Link>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ForgotPassword;","const Profile = () => {\r\n    return (\r\n        <div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport { useAuth } from \"../contexts/AuthProvider\";\r\nimport { Alert, Button, Card, Form, ListGroup } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Account = () => {\r\n    const {user} = useAuth();\r\n\r\n    return (\r\n        <div style={{display: 'flex', justifyContent: 'center', alignContent: 'center'}}>\r\n            <Card style={{minWidth: 600}}>\r\n                <Card.Body>\r\n                    <h1 style={{textAlign: 'center'}}>Account Information</h1>\r\n\r\n                    <div style={{textAlign: 'center'}}>\r\n                        <strong>Email: </strong>\r\n                        <span>{user.email}</span>\r\n                    </div>\r\n                    <Link to='/update-account'>\r\n                        <div className=\"text-center mt-4\">\r\n                            <Button\r\n                                className='w-50 center'\r\n                                as=\"input\"\r\n                                type=\"submit\"\r\n                                value=\"Update Account Information\">\r\n                            </Button>\r\n                        </div>\r\n                    </Link>\r\n                </Card.Body>\r\n            </Card>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Account;\r\n","import React, { useRef, useState } from 'react';\r\nimport { Alert, Button, Card, Form } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useAuth } from \"../contexts/AuthProvider\";\r\nimport Center from \"./Center\";\r\n\r\nconst UpdateAccount = () => {\r\n    const [error, setError] = useState('');\r\n    const [success, setSuccess] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const emailRef = useRef();\r\n    const passwordRef = useRef();\r\n    const passwordConfirmRef = useRef();\r\n    const {user, updatePassword, updateEmail} = useAuth();\r\n\r\n    async function updateAccountHandler(event) {\r\n        event.preventDefault();\r\n        setError('');\r\n        setSuccess('');\r\n\r\n        if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n            return setError('Passwords do not match.');\r\n        }\r\n\r\n        setLoading(true);\r\n        const promise = [];\r\n        if (emailRef.current.value !== user.email) {\r\n            promise.push(updateEmail(emailRef.current.value));\r\n        }\r\n\r\n        if (passwordRef.current.value && passwordConfirmRef.current.value) {\r\n            promise.push(updatePassword(passwordRef.current.value));\r\n        }\r\n\r\n        Promise.all(promise).then(() => {\r\n            setSuccess('Account successfully updated.');\r\n        }).catch(() => {\r\n            setError('Failed to update account information.');\r\n        }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Center>\r\n                <Card style={{minWidth: 600}}>\r\n                    <Card.Body>\r\n                        <h1 style={{textAlign: 'center'}}>Update Account</h1>\r\n                        {error && <Alert variant='danger'>{error}</Alert>}\r\n                        {success && <Alert variant='success'>{success}</Alert>}\r\n                        <Form onSubmit={updateAccountHandler}>\r\n                            <Form.Group id='email'>\r\n                                <Form.Label>Email Address</Form.Label>\r\n                                <Form.Control\r\n                                    type='email'\r\n                                    placeholder='Enter email'\r\n                                    ref={emailRef}\r\n                                    required\r\n                                    defaultValue={user.email}\r\n                                />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group id='password'>\r\n                                <Form.Label>Password</Form.Label>\r\n                                <Form.Control\r\n                                    type='password'\r\n                                    ref={passwordRef}\r\n                                    placeholder='Leave empty to not change'\r\n                                />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='formBasicPassword'>\r\n                                <Form.Label>Confirm Password</Form.Label>\r\n                                <Form.Control\r\n                                    type='password'\r\n                                    placeholder='Leave empty to not change'\r\n                                    ref={passwordConfirmRef}\r\n                                />\r\n                            </Form.Group>\r\n\r\n                            <Button\r\n                                disabled={loading}\r\n                                className='w-100'\r\n                                as=\"input\"\r\n                                type=\"submit\"\r\n                                value=\"Update Account\"\r\n                            />\r\n                        </Form>\r\n                    </Card.Body>\r\n                </Card>\r\n            </Center>\r\n            <div className='w-100 text-center mt-2'>\r\n                <Link to='/account'>Go Back</Link>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UpdateAccount;\r\n","import { Form, Button, Card, Alert } from 'react-bootstrap';\r\nimport { Multiselect } from 'multiselect-react-dropdown';\r\n// npm install multiselect-react-dropdown\r\nimport React, { useRef, useState } from \"react\";\r\nimport { db } from \"../firebase\";\r\nimport { useAuth } from \"../contexts/AuthProvider\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function Preference(){\r\n\r\n    const genres = {\r\n        options: [{name: 'Action'},{name: 'Adventure'}, {name: 'Animation'}, {name: 'Comedy'}, \r\n        {name: 'Documentary'}, {name: 'Drama'}, {name: 'Family'}, {name: 'Fantasy'}, {name: 'Horror'}, \r\n        {name: 'Mystery'}, {name: 'Romance'}, {name: 'Science Fiction'}, {name: 'Thriller'}, {name: 'Western'}]\r\n    };\r\n\r\n    const actorRef = useRef();\r\n    const directorRef = useRef();\r\n    const movieRef = useRef();\r\n    const history = useHistory();\r\n    const [success, setSuccess] = useState('');\r\n    let actorSelections = [];\r\n    let directorSelections = [];\r\n    let movieSelections = [];\r\n    let genreSelection = {};\r\n\r\n    const {user} = useAuth();\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        actorSelections = actorRef.current.value.split(\",\");\r\n        actorSelections = actorSelections.map(s => s.trim());\r\n\r\n        directorSelections = directorRef.current.value.split(\",\");\r\n        directorSelections = directorSelections.map(s => s.trim());\r\n\r\n        movieSelections = movieRef.current.value.split(\",\");\r\n        movieSelections = movieSelections.map(s => s.trim());\r\n\r\n        const genreSelections = genreSelection.map(genre => genre['name']);\r\n\r\n        db.collection('preferences').doc(user.uid).set({\r\n            actorSelections,\r\n            directorSelections,\r\n            genreSelections,\r\n            movieSelections,\r\n        });\r\n\r\n        setTimeout(() => {\r\n            history.push('/');\r\n        }, 5000);\r\n        setSuccess('Preferences successfully set. Redirecting back to home page in 5 seconds.');\r\n    };\r\n\r\n    const handleSkip = () => {\r\n        actorSelections = [];\r\n        movieSelections = [];\r\n        directorSelections = [];\r\n        const genreSelections = [];\r\n\r\n        db.collection('preferences').doc(user.uid).set({\r\n            actorSelections,\r\n            directorSelections,\r\n            genreSelections,\r\n            movieSelections,\r\n        });\r\n\r\n        setTimeout(() => {\r\n            history.push('/');\r\n        }, 5000);\r\n\r\n        setSuccess('Preferences successfully skipped. Redirecting back to home page in 5 seconds.');\r\n    };\r\n\r\n\r\n    const genreList = (selectedList, selectedItem) => {\r\n        genreSelection = selectedList;\r\n    };  \r\n\r\n    return (\r\n        <Card>\r\n            <h3 className=\"ml-4 mt-4\">Set your account preferences</h3>\r\n            <Card.Body>\r\n                {success && <Alert variant='success'>{success}</Alert>}\r\n                <Form onSubmit={handleSubmit}>\r\n                    <Form.Group id = \"actors\">\r\n                        <Form.Label>Write some of your favorite actors (separate using commas or leave blank)</Form.Label>\r\n                        <Form.Control as=\"textarea\" rows={3} ref={actorRef}/>\r\n                    </Form.Group>\r\n                    <Form.Group id = \"directors\">\r\n                        <Form.Label>Write some of your favorite directors (separate using commas or leave blank)</Form.Label>\r\n                        <Form.Control as=\"textarea\" rows={3} ref={directorRef}/>\r\n                    </Form.Group>\r\n                    <Form.Group id = \"genres\">\r\n                        <Form.Label>Select your favorite genres</Form.Label>\r\n                        <Multiselect\r\n                            options={genres.options} // Options to display in the dropdown\r\n                            displayValue=\"name\" // Property name to display in the dropdown options\r\n                            onSelect={genreList}\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group id = \"movies\">\r\n                        <Form.Label>Write some of your favorite movies (separate using commas or leave blank)</Form.Label>\r\n                        <Form.Control as=\"textarea\" rows={3} ref={movieRef}/>\r\n                    </Form.Group>\r\n                </Form>\r\n                <Button onClick={handleSubmit}>Save</Button>{' '}\r\n                <Button onClick={handleSkip} variant=\"link\">Skip</Button>{' '}\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n}","import React, {Component} from \"react\";\r\nimport { Button, Card, OverlayTrigger, Popover, Container, Row } from \"react-bootstrap\";\r\n\r\nconst imageBase = \"http://image.tmdb.org/t/p/w185\";\r\n\r\nconst scrollable = {\r\n    height: '40rem',\r\n    overflow: 'auto'\r\n};\r\n\r\nclass MovieCard extends Component {\r\n\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            showID: props.id,\r\n            detailsData: props.data.detailsData,\r\n            genres: props.data.genres,\r\n            productionCompanies: props.data.productionCompanies,\r\n            cast: props.data.cast,\r\n            crew: props.data.crew,\r\n            reviews: props.data.reviews,\r\n            videos: props.data.videos,\r\n            providers: props.data.providers,\r\n            summary: props.data.summary\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n    }\r\n\r\n    castPopover(){\r\n        return (\r\n            <Popover id=\"popover-basic\" style={scrollable}>\r\n                <Popover.Content>\r\n                    <ul className=\"list-group flush\">\r\n                        {this.state.cast.map( listItem => (\r\n                            <li className=\"list-group-item\">{listItem}</li>\r\n                        ))}\r\n                    </ul>\r\n                </Popover.Content>\r\n            </Popover>\r\n        )\r\n    }\r\n\r\n    crewPopover(){\r\n        return (\r\n            <Popover id=\"popover-basic\" style={scrollable}>\r\n                <Popover.Content>\r\n                    <ul className=\"list-group\">\r\n                        {this.state.crew.map( listItem => (\r\n                            <li className=\"list-group-item\">{listItem}</li>\r\n                        ))}\r\n                    </ul>\r\n                </Popover.Content>\r\n            </Popover>\r\n        )\r\n    }\r\n\r\n    reviewsPopover(){\r\n        return (\r\n            <Popover id=\"popover-basic\" style={scrollable}>\r\n                <Popover.Content>\r\n                    <ul className=\"list-group flush\">\r\n                        {this.state.reviews.map( listItem => (\r\n                            <li className=\"list-group-item\">{listItem}</li>\r\n                        ))}\r\n                    </ul>\r\n                </Popover.Content>\r\n            </Popover>\r\n        )\r\n    }\r\n\r\n    videosPopover(){\r\n        return (\r\n            <Popover id=\"popover-basic\" style={scrollable}>\r\n                <Popover.Content>\r\n                    <ul className=\"list-group flush\">\r\n                        {this.state.videos.map( listItem => (\r\n                            <li className=\"list-group-item\">\r\n                                <a target=\"_blank\" rel=\"noreferrer\" href={listItem[0]}>{listItem[1]}</a>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                </Popover.Content>\r\n            </Popover>\r\n        )\r\n    }\r\n\r\n    popover(){\r\n        return (\r\n            <Popover id=\"popover-basic\" style={scrollable}>\r\n                <Popover.Title as=\"h3\">{this.state.detailsData.title}</Popover.Title>\r\n                <Popover.Content>\r\n                    <p><b>Summary</b><br />{this.state.summary}</p><hr />\r\n                    <p><b>Genres</b><br />{this.state.genres.join()}</p><hr />\r\n                    <p><b>Production Companies</b><br />{this.state.productionCompanies.join()}</p><hr />\r\n                    <p><b>Providers [Buyers]</b><br />{this.state.providers.join()}</p><hr />\r\n                    \r\n                    <Container>\r\n                        <Row>\r\n                            <OverlayTrigger trigger=\"click\" rootClose placement=\"auto\" overlay={this.castPopover()}>\r\n                                <Button variant=\"link\">Cast Details</Button>\r\n                            </OverlayTrigger>\r\n                        </Row>\r\n                        <Row>\r\n                            <OverlayTrigger trigger=\"click\" rootClose placement=\"auto\" overlay={this.crewPopover()}>\r\n                                <Button variant=\"link\">Crew Details</Button>\r\n                            </OverlayTrigger>\r\n                        </Row>\r\n                        <Row>\r\n                            <OverlayTrigger trigger=\"click\" rootClose placement=\"auto\" overlay={this.reviewsPopover()}>\r\n                                <Button variant=\"link\">Reviews</Button>\r\n                            </OverlayTrigger>\r\n                        </Row>\r\n                        <Row>\r\n                            <OverlayTrigger trigger=\"click\" rootClose placement=\"auto\" overlay={this.videosPopover()}>\r\n                                <Button variant=\"link\">Related Videos</Button>\r\n                            </OverlayTrigger>\r\n                        </Row>\r\n                    </Container>\r\n                </Popover.Content>\r\n            </Popover>\r\n        ); \r\n    } \r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <Card style={{ width: '15em',marginLeft:10,marginTop:10}} border=\"success\">\r\n                    \r\n                    <Card.Img\r\n                        style={{ height: '12em'}} \r\n                        variant=\"top\" \r\n                        src={imageBase+this.state.detailsData.poster_path}\r\n                    />\r\n\r\n                    <Card.Body>\r\n                        \r\n                        <Card.Title>\r\n                            {this.state.detailsData.title}\r\n                        </Card.Title>\r\n\r\n                        <Card.Text>\r\n                            Rating: {this.state.detailsData.vote_average} out of 10\r\n                        </Card.Text>\r\n                        \r\n                        <OverlayTrigger trigger=\"click\" rootClose placement=\"auto\" overlay = {this.popover()}>\r\n                            <Button variant=\"info\">More Details</Button>\r\n                        </OverlayTrigger>\r\n                    </Card.Body>\r\n                \r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MovieCard","import axios from 'axios';\r\nimport React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport MovieCard from './MovieCard';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport './movies.css';\r\nimport PacmanLoader from \"react-spinners/PacmanLoader\";\r\nimport  '../App.css';\r\n\r\nclass Filter extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            latestMoviesData:[],\r\n            loading:true\r\n        }\r\n    }\r\n\r\n async componentDidMount(){\r\n    setTimeout(() => {\r\n        this.setState({loading:false})\r\n                }, 6000);\r\n        if(window.sessionStorage.getItem('genre')){\r\n        const filter_value = window.sessionStorage.getItem('genre');\r\n\r\n        const baseURL = `https://movies-tmdb-api.herokuapp.com/movies/`;\r\n        const baseURL1 = `https://movies-tmdb-api.herokuapp.com/genres/`;\r\n\r\n        const latestMoviesData = axios.get(baseURL1+filter_value)\r\n        const latestMovies = await latestMoviesData.then(response => response.data.genreList);\r\n        const latestMoviesURLs = latestMovies.map(id => baseURL+id);\r\n                    \r\n        const tempArray = [];\r\n        for(let i = 0; i < latestMoviesURLs.length; i++){\r\n            const currentMovieData = await axios.get(latestMoviesURLs[i])\r\n            tempArray.push(currentMovieData.data);\r\n        }\r\n        console.log(tempArray)\r\n        this.setState({\r\n            latestMoviesData: tempArray\r\n        })\r\n        }\r\n        else{\r\n        const filter_value = this.props.location.state.data;\r\n\r\n        const baseURL = `https://movies-tmdb-api.herokuapp.com/movies/`;\r\n        const baseURL1 = `https://movies-tmdb-api.herokuapp.com/genres/`;\r\n\r\n        const latestMoviesData = axios.get(baseURL1+filter_value)\r\n        const latestMovies = await latestMoviesData.then(response => response.data.genreList);\r\n        const latestMoviesURLs = latestMovies.map(id => baseURL+id);\r\n                    \r\n        const tempArray = [];\r\n        for(let i = 0; i < latestMoviesURLs.length; i++){\r\n            if(i>8){\r\n                break;\r\n            }\r\n            const currentMovieData = await axios.get(latestMoviesURLs[i])\r\n            tempArray.push(currentMovieData.data);\r\n        }\r\n        // console.log(tempArrays)\r\n        this.setState({\r\n            latestMoviesData: tempArray\r\n        })\r\n    }\r\n    }\r\n\r\n    handleChange = async (event) => {\r\n        const filter_value = event.target.value;\r\n        window.sessionStorage.setItem('genre',filter_value);\r\n        const baseURL = `https://movies-tmdb-api.herokuapp.com/movies/`;\r\n        const baseURL1 = `https://movies-tmdb-api.herokuapp.com/genres/`;\r\n\r\n        const latestMoviesData = axios.get(baseURL1+filter_value)\r\n        const latestMovies = await latestMoviesData.then(response => response.data.genreList);\r\n        const latestMoviesURLs = latestMovies.map(id => baseURL+id);\r\n                    \r\n        const tempArray = [];\r\n        for(let i = 0; i < latestMoviesURLs.length; i++){\r\n            const currentMovieData = await axios.get(latestMoviesURLs[i])\r\n            tempArray.push(currentMovieData.data);\r\n        }\r\n        console.log(tempArray)\r\n        this.setState({\r\n            latestMoviesData: tempArray\r\n        })\r\n        this.props.history.go(0);\r\n    };\r\n\r\n    showFilteredMovies(){\r\n        var i = 0;\r\n        var result = [];\r\n        console.log(this.state.latestMoviesData);\r\n        for(;i<this.state.latestMoviesData.length;i++){\r\n            var movie = this.state.latestMoviesData[i];\r\n            var movieData = this.state.latestMoviesData[i];\r\n            result.splice(0,0,\r\n            <div style = {{display:'inline-block'}}>\r\n                <MovieCard \r\n                    id ={movie.id} \r\n                    data = {movieData}>\r\n            </MovieCard>\r\n            </div>\r\n            )   \r\n        }\r\n        return result;\r\n\r\n    }\r\n\r\n\r\n    render(){\r\n        if(this.state.loading){\r\n            return(\r\n            <div className=\"App1\">\r\n            <PacmanLoader \r\n                    size={30} \r\n                    color={\"#000000\"} \r\n                    loading={this.state.loading} />\r\n            </div>\r\n            )\r\n        }\r\n        else{\r\n        return(\r\n            <div>\r\n                    <Button \r\n                       variant = \"contained\" \r\n                       color = \"primary\" \r\n                       style = {{marginLeft:20}} \r\n                       onClick = {()=>{this.props.history.push('/today')}}\r\n                       >\r\n                           GET TV Shows Airing Today\r\n                       </Button>\r\n                    <FormControl \r\n                       style = {{marginLeft:600}}\r\n                    >\r\n                   <InputLabel \r\n                       htmlFor=\"age-native-simple\"\r\n                   >\r\n                       Genre\r\n                   </InputLabel>\r\n                   <Select native value={this.state.age} onChange={this.handleChange} inputProps={{name: 'age',id: 'age-native-simple',}}>\r\n                       <option aria-label=\"None\" value=\"\" />\r\n                       <option value={28}>Action</option>\r\n                       <option value={12}>Adventure</option>\r\n                       <option value={16}>Animation</option>\r\n                       <option value={35}>Comedy</option>\r\n                       <option value={80}>Crime</option>\r\n                       <option value={99}>Documentary</option>\r\n                       <option value={18}>Drama</option>\r\n                       <option value={10751}>Family</option>\r\n                       <option value={14}>Fantasy</option>\r\n                       <option value={36}>History</option>\r\n                       <option value={27}>Horror</option>\r\n                       <option value={10402}>Music</option>\r\n                       <option value={9648}>Mystery</option>\r\n                       <option value={10749}>Romance</option>\r\n                       <option value={878}>Science Fiction</option>\r\n                       <option value={53}>Thriller</option>\r\n                       <option value={10752}>War</option>\r\n                   </Select>\r\n                   \r\n               </FormControl>\r\n\r\n                   <ul>\r\n                       {this.showFilteredMovies()}\r\n                   </ul>\r\n\r\n            </div>\r\n        )\r\n        }\r\n    }\r\n}\r\n\r\nexport default Filter;","import axios from 'axios';\r\nimport React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport MovieCard from './MovieCard';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport './movies.css';\r\nimport PacmanLoader from \"react-spinners/PacmanLoader\";\r\nimport  '../App.css';\r\nimport './Filter';\r\n\r\nconst apiKey = \"42d845ec0caf10ecc9f34f1648197aee\"\r\nvar filter = false;\r\n\r\nclass MoviesList extends React.Component{\r\n    \r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            latestMovies:[],\r\n            latestMoviesData:[],\r\n            filter:false,\r\n            filterValue:'',\r\n            filteredMovies:[],\r\n            filteredMoviesData: [],\r\n            genreList:[],\r\n            loading:true\r\n        }\r\n    }\r\n\r\n    async componentDidMount(){\r\n            setTimeout(() => {\r\n                this.setState({loading:false})\r\n                        }, 6000);\r\n        \r\n        const baseURL = `https://movies-tmdb-api.herokuapp.com/movies/`;\r\n        const baseURL1 = `https://movies-tmdb-api.herokuapp.com/nowplaying/`;\r\n\r\n        const latestMoviesData = axios.get(baseURL1)\r\n        const latestMovies = await latestMoviesData.then(response => response.data.movieList);\r\n        const latestMoviesURLs = latestMovies.map(id => baseURL+id);\r\n                    \r\n        const tempArray = [];\r\n        for(let i = 0; i < latestMoviesURLs.length; i++){\r\n            const currentMovieData = await axios.get(latestMoviesURLs[i])\r\n            tempArray.push(currentMovieData.data);\r\n        }\r\n        console.log(tempArray)\r\n        this.setState({\r\n            latestMoviesData: tempArray\r\n        })\r\n        \r\n    }\r\n    \r\n    handleChange = async (event) => {\r\n        this.props.history.push('/filter',{data:event.target.value})\r\n      };\r\n\r\n    showMovies(){\r\n\r\n        var result = [];\r\n        let i = 0;\r\n        for(;i<this.state.latestMoviesData.length;i++){\r\n            var movie = this.state.latestMoviesData[i];\r\n            var movieData = this.state.latestMoviesData[i];\r\n            if(movie.detailsData.original_title[0]==='B'&&movie.detailsData.original_title[1]==='o'){\r\n                continue;\r\n            }\r\n            if(movie.detailsData.original_language!==\"en\"){\r\n                continue;\r\n            }\r\n            result.splice(0,0,\r\n               <div style = {{display:'inline-block'}}>\r\n                <MovieCard \r\n                    id ={movie.showID} \r\n                    data = {movieData}>\r\n              </MovieCard>\r\n              </div>\r\n              )   \r\n        }\r\n        return result;\r\n    }\r\n    \r\n    render(){\r\n        if(this.state.loading){\r\n            return(\r\n            <div className=\"App1\">\r\n            <PacmanLoader \r\n                    size={30} \r\n                    color={\"#000000\"} \r\n                    loading={this.state.loading} />\r\n            </div>\r\n            )\r\n        }\r\n        else{\r\n        return(\r\n            <div>\r\n                    <Button \r\n                       variant = \"contained\" \r\n                       color = \"primary\" \r\n                       style = {{marginLeft:20}} \r\n                       onClick = {()=>{this.props.history.push('/today')}}\r\n                       >\r\n                           GET TV Shows Airing Today\r\n                       </Button>\r\n                    <FormControl \r\n                       style = {{marginLeft:600}}\r\n                    >\r\n                   <InputLabel \r\n                       htmlFor=\"age-native-simple\"\r\n                   >\r\n                       Genre\r\n                   </InputLabel>\r\n                   <Select native value={'Select a Genre'} onChange={this.handleChange} inputProps={{name: 'age',id: 'age-native-simple',}}>\r\n                       <option aria-label=\"None\" value=\"\" />\r\n                       <option value={28}>Action</option>\r\n                       <option value={12}>Adventure</option>\r\n                       <option value={16}>Animation</option>\r\n                       <option value={35}>Comedy</option>\r\n                       <option value={80}>Crime</option>\r\n                       <option value={99}>Documentary</option>\r\n                       <option value={18}>Drama</option>\r\n                       <option value={10751}>Family</option>\r\n                       <option value={14}>Fantasy</option>\r\n                       <option value={36}>History</option>\r\n                       <option value={27}>Horror</option>\r\n                       <option value={10402}>Music</option>\r\n                       <option value={9648}>Mystery</option>\r\n                       <option value={10749}>Romance</option>\r\n                       <option value={878}>Science Fiction</option>\r\n                       <option value={53}>Thriller</option>\r\n                       <option value={10752}>War</option>\r\n                   </Select>\r\n                   \r\n               </FormControl>\r\n   \r\n                   <ul>\r\n                       {filter ? this.showFilteredMovies():this.showMovies()}\r\n                   </ul>\r\n\r\n            </div>\r\n        )\r\n        }\r\n    }\r\n}\r\nexport default MoviesList;","import React from 'react'\r\nimport axios from 'axios'\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport PacmanLoader from \"react-spinners/PacmanLoader\";\r\nimport MovieCard from './MovieCard';\r\n\r\nconst apiKey = \"42d845ec0caf10ecc9f34f1648197aee\";\r\nconst imageBase = \"http://image.tmdb.org/t/p/w300\";\r\n\r\nclass Search extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            searchResults:[],\r\n            loading:true\r\n        }\r\n    }\r\n    async componentDidMount(){\r\n        setTimeout(() => {\r\n            this.setState({loading:false})\r\n                    }, 6000);\r\n        const search_query = this.props.location.state.data;\r\n        const baseURL = `https://movies-tmdb-api.herokuapp.com/movies/`;\r\n        const baseURL1= `https://movies-tmdb-api.herokuapp.com/movieList/`;\r\n\r\n        const latestMoviesData = axios.get(baseURL1+search_query);\r\n        console.log(\"latest movies are\",latestMoviesData);\r\n        const latestMovies = await latestMoviesData.then(response => response.data.movieList);\r\n        const latestMoviesURLs = latestMovies.map(id => baseURL+id);\r\n        console.log(latestMoviesURLs);\r\n        const tempArray = [];\r\n        for(let i = 0; i < latestMoviesURLs.length; i++){\r\n            // if(i>18){\r\n            //     break;\r\n            // }\r\n            const currentMovieData = await axios.get(latestMoviesURLs[i])\r\n            console.log(currentMovieData);\r\n            tempArray.push(currentMovieData.data);\r\n        }\r\n        console.log(tempArray)\r\n        this.setState({\r\n            searchResults: tempArray\r\n        })\r\n        \r\n}\r\n\r\nshowSearchResults(){\r\n        let i = 0;\r\n        var result = [];\r\n        console.log(this.state.searchResults);\r\n        for(;i<this.state.searchResults.length;i++){\r\n            var movie = this.state.searchResults[i];\r\n            console.log(movie);\r\n            var imgAddr;\r\n            if(movie.backdrop_path){\r\n                imgAddr = imageBase+movie.detailsData.backdrop_path\r\n            }\r\n            else{\r\n                imgAddr = imageBase+movie.detailsData.poster_path\r\n            }\r\n            if(!movie.detailsData.backdrop_path&&!movie.detailsData.poster_path){\r\n                continue;\r\n            }\r\n            if(movie.detailsData.original_language!=='en'){\r\n                continue;\r\n            }\r\n            \r\n            result.push(\r\n            <div style = {{display:'inline-block'}}>\r\n                <MovieCard \r\n                    id ={movie.id} \r\n                    data = {movie}>\r\n            </MovieCard>\r\n            </div>\r\n              );\r\n    }\r\n    return result;\r\n}\r\nrender(){\r\n    if(this.state.loading){\r\n        return(\r\n        <div className=\"App1\">\r\n        <PacmanLoader \r\n                size={30} \r\n                color={\"#000000\"} \r\n                loading={this.state.loading} />\r\n        </div>\r\n        )\r\n    }\r\n    else{\r\n\r\n    return(\r\n\r\n        <div>\r\n            <ul>\r\n                {this.showSearchResults()}\r\n                \r\n            </ul>\r\n            </div>\r\n    )\r\n    }\r\n}\r\n}\r\nexport default Search;\r\n\r\n\r\n\r\n\r\n","import React, {Component} from \"react\";\r\nimport { Button, Card, OverlayTrigger, Popover, Container, Row } from \"react-bootstrap\";\r\n\r\nconst imageBase = \"http://image.tmdb.org/t/p/w185\";\r\n\r\nconst scrollable = {\r\n    height: '40rem',\r\n    overflow: 'auto'\r\n};\r\n\r\nclass TVShowCard extends Component {\r\n\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            showID: props.id,\r\n            detailsData: props.data.detailsData,\r\n            genres: props.data.genres,\r\n            productionCompanies: props.data.productionCompanies,\r\n            cast: props.data.cast,\r\n            crew: props.data.crew,\r\n            reviews: props.data.reviews,\r\n            videos: props.data.videos,\r\n            providers: props.data.providers,\r\n            seasons: props.data.seasons\r\n        }\r\n    }\r\n\r\n    async componentDidMount(){\r\n    }\r\n\r\n    castPopover(){\r\n        return (\r\n            <Popover id=\"popover-basic\" style={scrollable}>\r\n                <Popover.Content>\r\n                    <ul className=\"list-group flush\">\r\n                        {this.state.cast.map( listItem => (\r\n                            <li className=\"list-group-item\">{listItem}</li>\r\n                        ))}\r\n                    </ul>\r\n                </Popover.Content>\r\n            </Popover>\r\n        )\r\n    }\r\n\r\n    crewPopover(){\r\n        return (\r\n            <Popover id=\"popover-basic\" style={scrollable}>\r\n                <Popover.Content>\r\n                    <ul className=\"list-group\">\r\n                        {this.state.crew.map( listItem => (\r\n                            <li className=\"list-group-item\">{listItem}</li>\r\n                        ))}\r\n                    </ul>\r\n                </Popover.Content>\r\n            </Popover>\r\n        )\r\n    }\r\n\r\n    reviewsPopover(){\r\n        return (\r\n            <Popover id=\"popover-basic\" style={scrollable}>\r\n                <Popover.Content>\r\n                    <ul className=\"list-group flush\">\r\n                        {this.state.reviews.map( listItem => (\r\n                            <li className=\"list-group-item\">{listItem}</li>\r\n                        ))}\r\n                    </ul>\r\n                </Popover.Content>\r\n            </Popover>\r\n        )\r\n    }\r\n\r\n    videosPopover(){\r\n        return (\r\n            <Popover id=\"popover-basic\" style={scrollable}>\r\n                <Popover.Content>\r\n                    <ul className=\"list-group flush\">\r\n                        {this.state.videos.map( listItem => (\r\n                            <li className=\"list-group-item\">\r\n                                <a target=\"_blank\" rel=\"noreferrer\" href={listItem[0]}>{listItem[1]}</a>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                </Popover.Content>\r\n            </Popover>\r\n        )\r\n    }\r\n\r\n    seasonItemPopover(seasonItem){\r\n        return(\r\n            <Popover id=\"popover-basic\" style={scrollable}>\r\n                <Popover.Title>{seasonItem[2]}</Popover.Title>\r\n                <Popover.Content>\r\n                    <img src={imageBase+seasonItem[4]} alt={seasonItem[2]} /><hr />\r\n                    <p><b>Summary</b><br />{seasonItem[3]}</p><hr />\r\n                    <p><b>Last Air Date</b><br />{seasonItem[0]}</p><hr />\r\n                    <p><b>Episodes in Season</b><br />{seasonItem[1]}</p><hr />\r\n                </Popover.Content>\r\n            </Popover>\r\n        )\r\n    }\r\n\r\n    seasonsPopover(){\r\n        return (\r\n            <Popover id=\"popover-basic\" style={scrollable}>\r\n                <Popover.Content>\r\n                    <ul className=\"list-group flush\">\r\n                        {this.state.seasons.map( seasonItem => (\r\n                            <li className=\"list-group-item\">\r\n                                <OverlayTrigger trigger=\"click\" rootClose placement=\"auto\" overlay={this.seasonItemPopover(seasonItem)}>\r\n                                    <Button variant=\"link\">{seasonItem[2]}</Button>\r\n                                </OverlayTrigger>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                </Popover.Content>\r\n            </Popover>\r\n        )\r\n    }\r\n\r\n\r\n    popover(){\r\n        return (\r\n            <Popover id=\"popover-basic\" style={scrollable}>\r\n                <Popover.Title as=\"h3\">{this.state.detailsData.name}</Popover.Title>\r\n                <Popover.Content>\r\n                    <p><b>Genres</b><br />{this.state.genres.join()}</p><hr />\r\n                    <p><b>Production Companies</b><br />{this.state.productionCompanies.join()}</p><hr />\r\n                    <p><b>Providers [Buyers]</b><br />{this.state.providers.join()}</p><hr />\r\n                    \r\n                    <Container>\r\n                        <Row>\r\n                            <OverlayTrigger trigger=\"click\" rootClose placement=\"auto\" overlay={this.seasonsPopover()}>\r\n                                <Button variant=\"link\">Season Details</Button>\r\n                            </OverlayTrigger>\r\n                        </Row>\r\n                        <Row>\r\n                            <OverlayTrigger trigger=\"click\" rootClose placement=\"auto\" overlay={this.castPopover()}>\r\n                                <Button variant=\"link\">Cast Details</Button>\r\n                            </OverlayTrigger>\r\n                        </Row>\r\n                        <Row>\r\n                            <OverlayTrigger trigger=\"click\" rootClose placement=\"auto\" overlay={this.crewPopover()}>\r\n                                <Button variant=\"link\">Crew Details</Button>\r\n                            </OverlayTrigger>\r\n                        </Row>\r\n                        <Row>\r\n                            <OverlayTrigger trigger=\"click\" rootClose placement=\"auto\" overlay={this.reviewsPopover()}>\r\n                                <Button variant=\"link\">Reviews</Button>\r\n                            </OverlayTrigger>\r\n                        </Row>\r\n                        <Row>\r\n                            <OverlayTrigger trigger=\"click\" rootClose placement=\"auto\" overlay={this.videosPopover()}>\r\n                                <Button variant=\"link\">Related Videos</Button>\r\n                            </OverlayTrigger>\r\n                        </Row>\r\n                    </Container>\r\n                </Popover.Content>\r\n            </Popover>\r\n        ); \r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <Card style={{ width: '18em'}} border=\"success\">\r\n                    \r\n                    <Card.Img\r\n                        style={{ height: '12em'}} \r\n                        variant=\"top\" \r\n                        src={imageBase+this.state.detailsData.poster_path}\r\n                    />\r\n\r\n                    <Card.Body>\r\n                        \r\n                        <Card.Title>\r\n                            {this.state.detailsData.name}\r\n                        </Card.Title>\r\n\r\n                        <Card.Text>\r\n                            Rating: {this.state.detailsData.vote_average} out of 10\r\n                        </Card.Text>\r\n\r\n                        <OverlayTrigger trigger=\"click\" placement=\"auto\" overlay = {this.popover()}>\r\n                            <Button variant=\"info\">More Details</Button>\r\n                        </OverlayTrigger>\r\n\r\n                    </Card.Body>\r\n                \r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TVShowCard","import React from 'react';\r\nimport axios from 'axios';\r\nimport PacmanLoader from \"react-spinners/PacmanLoader\";\r\n\r\nimport TVShowCard from './TVShowCard';\r\n\r\nconst apiKey = \"42d845ec0caf10ecc9f34f1648197aee\"\r\n\r\nclass TodayTV extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            tvShows:[],\r\n            tvShowsData: [],\r\n            loading: true\r\n        }\r\n    }\r\n    \r\n    async componentDidMount(){\r\n        setTimeout(() => {\r\n            this.setState({loading:false})\r\n                    }, 6000);\r\n        \r\n        const baseURL = `https://movies-tmdb-api.herokuapp.com/tvshows/`;\r\n        const baseURL1 = `https://movies-tmdb-api.herokuapp.com/nowplaying/`;\r\n\r\n        const latestTvshowData = axios.get(baseURL1)\r\n        const latestTvshows = await latestTvshowData.then(response => response.data.tvshowList);\r\n        const latestTvURLs = latestTvshows.map(id => baseURL+id);\r\n\r\n        console.log(\"latest tv ursl\",latestTvURLs);\r\n                    \r\n        const tempArray = [];\r\n        for(let i = 0; i < latestTvURLs.length; i++){\r\n            const currentTvData = await axios.get(latestTvURLs[i])\r\n            tempArray.push(currentTvData.data);\r\n        }\r\n        console.log(\"temp array is \",tempArray)\r\n        this.setState({\r\n            tvShowsData: tempArray\r\n        })\r\n    }\r\n\r\n\r\n    showtvShows(){\r\n        var result = [];\r\n        let i = 0;\r\n        console.log(\"after data os\",this.state.tvShowsData);\r\n        for(;i<this.state.tvShowsData.length;i++){\r\n            var tvshow = this.state.tvShowsData[i];\r\n            var tvShowData = this.state.tvShowsData[i];\r\n            // if(tvshow.original_language!=='en'){\r\n            //     continue;\r\n            // }\r\n            result.splice(0,0,\r\n               <div style = {{display:'inline-block'}}>\r\n                <TVShowCard \r\n                    id ={tvshow.showID} \r\n                    data = {tvShowData}\r\n                >\r\n              </TVShowCard>\r\n              </div>\r\n              \r\n              )\r\n            \r\n        }\r\n        console.log(\"res is \",result);\r\n        return result;\r\n    }\r\n    render(){\r\n        if(this.state.loading){\r\n            return(\r\n            <div className=\"App1\">\r\n            <PacmanLoader \r\n                    size={30} \r\n                    color={\"#000000\"} \r\n                    loading={this.state.loading} />\r\n            </div>\r\n            )\r\n        }\r\n        else {\r\n\r\n        return(\r\n            <div>\r\n                <ul>\r\n                    {this.showtvShows()}\r\n                </ul>\r\n            </div>\r\n        )\r\n        }\r\n    }\r\n}\r\nexport default TodayTV;","import  './App.css';\r\nimport React from 'react';\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\n// import PacmanLoader from \"react-spinners/PacmanLoader\";\r\nimport NavBar from './components/NavBar';\r\nimport AboutUs from './components/AboutUs';\r\nimport SignUp from './components/SignUp';\r\nimport Login from './components/Login';\r\n\r\nimport ForgotPassword from './components/ForgotPassword';\r\nimport Profile from './components/Profile'\r\nimport Account from \"./components/Account\";\r\nimport UpdateAccount from \"./components/UpdateAccount\";\r\nimport Preference from './components/Preference';\r\nimport MoviesList from './components/MoviesList';\r\nimport Search from './components/Search';\r\nimport { AuthProvider } from './contexts/AuthProvider';\r\nimport TodayTV from './components/TodayTV';\r\nimport Filter from './components/Filter';\r\n\r\nfunction App() {\r\n    return (\r\n        <div>\r\n        <AuthProvider>\r\n            <Router>\r\n                <div className=\"container\">\r\n                    <NavBar/>\r\n                    <br/>\r\n                    <Route path=\"/aboutuspage\" exact component={AboutUs}/>\r\n                    <Route path=\"/signup\" exact component={SignUp}/>\r\n                    <Route path=\"/login\" exact component={Login}/>\r\n                    <Route path=\"/forgot-password\" exact component={ForgotPassword}/>\r\n                    <Route path=\"/profile\" exact component={Profile}/>\r\n                    <Route path=\"/account\" exact component={Account}/>\r\n                    <Route path=\"/update-account\" exact component={UpdateAccount}/>\r\n                    <Route path=\"/pref\" exact component={Preference}/>\r\n\r\n                    <Route path = \"/\" exact component = {MoviesList}/>\r\n                    <Route path = \"/search\" exact component = {Search}/>\r\n                    <Route path = \"/today\" exact component = {TodayTV}/>\r\n                    <Route path=\"/filter\" exact component={Filter}/>\r\n                </div>\r\n            </Router>\r\n        </AuthProvider>\r\n                \r\n        \r\n        </div>\r\n    );\r\n    }\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}